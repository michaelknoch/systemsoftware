--2015-11-16 19:47:18--  https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.2.3.tar.xz
Resolving cdn.kernel.org (cdn.kernel.org)... 185.31.17.69
Connecting to cdn.kernel.org (cdn.kernel.org)|185.31.17.69|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 85523884 (82M) [application/x-xz]
Saving to: ‘linux-4.2.3.tar.xz’

     0K .......... .......... .......... .......... ..........  0% 5.25M 16s
    50K .......... .......... .......... .......... ..........  0% 4.97M 16s
   100K .......... .......... .......... .......... ..........  0%  116M 11s
   150K .......... .......... .......... .......... ..........  0% 5.12M 12s
   200K .......... .......... .......... .......... ..........  0% 5.42M 13s
   250K .......... .......... .......... .......... ..........  0% 91.8M 11s
   300K .......... .......... .......... .......... ..........  0%  116M 9s
   350K .......... .......... .......... .......... ..........  0% 5.61M 10s
   400K .......... .......... .......... .......... ..........  0%  102M 9s
   450K .......... .......... .......... .......... ..........  0% 5.54M 9s
   500K .......... .......... .......... .......... ..........  0% 79.4M 9s
   550K .......... .......... .......... .......... ..........  0% 92.2M 8s
   600K .......... .......... .......... .......... ..........  0% 62.7M 8s
   650K .......... .......... .......... .......... ..........  0%  109M 7s
   700K .......... .......... .......... .......... ..........  0% 6.57M 7s
   750K .......... .......... .......... .......... ..........  0% 77.6M 7s
   800K .......... .......... .......... .......... ..........  1% 46.7M 7s
   850K .......... .......... .......... .......... ..........  1% 97.2M 6s
   900K .......... .......... .......... .......... ..........  1% 64.1M 6s
   950K .......... .......... .......... .......... ..........  1% 8.25M 6s
  1000K .......... .......... .......... .......... ..........  1% 75.7M 6s
  1050K .......... .......... .......... .......... ..........  1% 76.5M 6s
  1100K .......... .......... .......... .......... ..........  1% 71.6M 6s
  1150K .......... .......... .......... .......... ..........  1% 62.9M 5s
  1200K .......... .......... .......... .......... ..........  1% 73.4M 5s
  1250K .......... .......... .......... .......... ..........  1% 70.2M 5s
  1300K .......... .......... .......... .......... ..........  1%  136M 5s
  1350K .......... .......... .......... .......... ..........  1%  104M 5s
  1400K .......... .......... .......... .......... ..........  1% 10.8M 5s
  1450K .......... .......... .......... .......... ..........  1% 61.7M 5s
  1500K .......... .......... .......... .......... ..........  1% 76.9M 5s
  1550K .......... .......... .......... .......... ..........  1% 62.8M 4s
  1600K .......... .......... .......... .......... ..........  1% 87.0M 4s
  1650K .......... .......... .......... .......... ..........  2% 85.9M 4s
  1700K .......... .......... .......... .......... ..........  2%  105M 4s
  1750K .......... .......... .......... .......... ..........  2%  123M 4s
  1800K .......... .......... .......... .......... ..........  2% 10.1M 4s
  1850K .......... .......... .......... .......... ..........  2% 72.9M 4s
  1900K .......... .......... .......... .......... ..........  2% 79.4M 4s
  1950K .......... .......... .......... .......... ..........  2% 63.6M 4s
  2000K .......... .......... .......... .......... ..........  2% 77.0M 4s
  2050K .......... .......... .......... .......... ..........  2% 77.2M 4s
  2100K .......... .......... .......... .......... ..........  2% 75.3M 4s
  2150K .......... .......... .......... .......... ..........  2% 58.6M 4s
  2200K .......... .......... .......... .......... ..........  2% 92.8M 4s
  2250K .......... .......... .......... .......... ..........  2% 92.3M 4s
  2300K .......... .......... .......... .......... ..........  2% 93.2M 3s
  2350K .......... .......... .......... .......... ..........  2% 80.3M 3s
  2400K .......... .......... .......... .......... ..........  2%  132M 3s
  2450K .......... .......... .......... .......... ..........  2%  138M 3s
  2500K .......... .......... .......... .......... ..........  3%  137M 3s
  2550K .......... .......... .......... .......... ..........  3%  117M 3s
  2600K .......... .......... .......... .......... ..........  3% 46.7M 3s
  2650K .......... .......... .......... .......... ..........  3% 91.8M 3s
  2700K .......... .......... .......... .......... ..........  3% 80.8M 3s
  2750K .......... .......... .......... .......... ..........  3% 81.1M 3s
  2800K .......... .......... .......... .......... ..........  3% 78.2M 3s
  2850K .......... .......... .......... .......... ..........  3%  103M 3s
  2900K .......... .......... .......... .......... ..........  3% 96.9M 3s
  2950K .......... .......... .......... .......... ..........  3% 81.2M 3s
  3000K .......... .......... .......... .......... ..........  3%  101M 3s
  3050K .......... .......... .......... .......... ..........  3% 79.2M 3s
  3100K .......... .......... .......... .......... ..........  3% 89.9M 3s
  3150K .......... .......... .......... .......... ..........  3% 59.8M 3s
  3200K .......... .......... .......... .......... ..........  3% 93.2M 3s
  3250K .......... .......... .......... .......... ..........  3%  123M 3s
  3300K .......... .......... .......... .......... ..........  4% 19.9M 3s
  3350K .......... .......... .......... .......... ..........  4% 73.8M 3s
  3400K .......... .......... .......... .......... ..........  4% 90.7M 3s
  3450K .......... .......... .......... .......... ..........  4% 95.2M 3s
  3500K .......... .......... .......... .......... ..........  4% 95.7M 3s
  3550K .......... .......... .......... .......... ..........  4% 74.1M 3s
  3600K .......... .......... .......... .......... ..........  4% 95.1M 3s
  3650K .......... .......... .......... .......... ..........  4% 96.1M 3s
  3700K .......... .......... .......... .......... ..........  4% 94.5M 3s
  3750K .......... .......... .......... .......... ..........  4% 68.9M 2s
  3800K .......... .......... .......... .......... ..........  4% 70.6M 2s
  3850K .......... .......... .......... .......... ..........  4% 91.9M 2s
  3900K .......... .......... .......... .......... ..........  4% 94.7M 2s
  3950K .......... .......... .......... .......... ..........  4% 68.4M 2s
  4000K .......... .......... .......... .......... ..........  4% 92.9M 2s
  4050K .......... .......... .......... .......... ..........  4% 92.6M 2s
  4100K .......... .......... .......... .......... ..........  4% 85.3M 2s
  4150K .......... .......... .......... .......... ..........  5% 82.4M 2s
  4200K .......... .......... .......... .......... ..........  5% 94.6M 2s
  4250K .......... .......... .......... .......... ..........  5% 95.2M 2s
  4300K .......... .......... .......... .......... ..........  5% 82.8M 2s
  4350K .......... .......... .......... .......... ..........  5% 75.2M 2s
  4400K .......... .......... .......... .......... ..........  5% 76.6M 2s
  4450K .......... .......... .......... .......... ..........  5% 92.7M 2s
  4500K .......... .......... .......... .......... ..........  5% 93.8M 2s
  4550K .......... .......... .......... .......... ..........  5% 75.4M 2s
  4600K .......... .......... .......... .......... ..........  5% 89.8M 2s
  4650K .......... .......... .......... .......... ..........  5% 95.0M 2s
  4700K .......... .......... .......... .......... ..........  5% 94.1M 2s
  4750K .......... .......... .......... .......... ..........  5% 60.3M 2s
  4800K .......... .......... .......... .......... ..........  5% 89.5M 2s
  4850K .......... .......... .......... .......... ..........  5% 85.0M 2s
  4900K .......... .......... .......... .......... ..........  5% 72.8M 2s
  4950K .......... .......... .......... .......... ..........  5% 84.8M 2s
  5000K .......... .......... .......... .......... ..........  6% 81.9M 2s
  5050K .......... .......... .......... .......... ..........  6% 93.1M 2s
  5100K .......... .......... .......... .......... ..........  6% 90.4M 2s
  5150K .......... .......... .......... .......... ..........  6% 72.1M 2s
  5200K .......... .......... .......... .......... ..........  6% 92.7M 2s
  5250K .......... .......... .......... .......... ..........  6% 96.1M 2s
  5300K .......... .......... .......... .......... ..........  6% 88.4M 2s
  5350K .......... .......... .......... .......... ..........  6% 78.0M 2s
  5400K .......... .......... .......... .......... ..........  6% 89.1M 2s
  5450K .......... .......... .......... .......... ..........  6% 94.7M 2s
  5500K .......... .......... .......... .......... ..........  6% 92.8M 2s
  5550K .......... .......... .......... .......... ..........  6% 73.2M 2s
  5600K .......... .......... .......... .......... ..........  6% 94.4M 2s
  5650K .......... .......... .......... .......... ..........  6% 92.3M 2s
  5700K .......... .......... .......... .......... ..........  6% 84.2M 2s
  5750K .......... .......... .......... .......... ..........  6% 82.1M 2s
  5800K .......... .......... .......... .......... ..........  7% 95.3M 2s
  5850K .......... .......... .......... .......... ..........  7% 80.6M 2s
  5900K .......... .......... .......... .......... ..........  7% 93.7M 2s
  5950K .......... .......... .......... .......... ..........  7% 71.0M 2s
  6000K .......... .......... .......... .......... ..........  7% 88.8M 2s
  6050K .......... .......... .......... .......... ..........  7% 94.7M 2s
  6100K .......... .......... .......... .......... ..........  7% 94.0M 2s
  6150K .......... .......... .......... .......... ..........  7% 76.2M 2s
  6200K .......... .......... .......... .......... ..........  7% 92.9M 2s
  6250K .......... .......... .......... .......... ..........  7% 91.3M 2s
  6300K .......... .......... .......... .......... ..........  7% 91.1M 2s
  6350K .......... .......... .......... .......... ..........  7% 73.2M 2s
  6400K .......... .......... .......... .......... ..........  7% 94.5M 2s
  6450K .......... .......... .......... .......... ..........  7% 94.6M 2s
  6500K .......... .......... .......... .......... ..........  7% 95.0M 2s
  6550K .......... .......... .......... .......... ..........  7% 77.5M 2s
  6600K .......... .......... .......... .......... ..........  7% 94.5M 2s
  6650K .......... .......... .......... .......... ..........  8% 94.7M 2s
  6700K .......... .......... .......... .......... ..........  8% 95.3M 2s
  6750K .......... .......... .......... .......... ..........  8% 73.3M 2s
  6800K .......... .......... .......... .......... ..........  8% 94.3M 2s
  6850K .......... .......... .......... .......... ..........  8% 94.3M 2s
  6900K .......... .......... .......... .......... ..........  8% 90.7M 2s
  6950K .......... .......... .......... .......... ..........  8% 77.0M 2s
  7000K .......... .......... .......... .......... ..........  8% 90.1M 2s
  7050K .......... .......... .......... .......... ..........  8% 94.3M 2s
  7100K .......... .......... .......... .......... ..........  8% 95.0M 2s
  7150K .......... .......... .......... .......... ..........  8% 73.9M 2s
  7200K .......... .......... .......... .......... ..........  8% 93.2M 2s
  7250K .......... .......... .......... .......... ..........  8% 93.3M 2s
  7300K .......... .......... .......... .......... ..........  8% 81.1M 2s
  7350K .......... .......... .......... .......... ..........  8% 84.3M 2s
  7400K .......... .......... .......... .......... ..........  8% 93.3M 2s
  7450K .......... .......... .......... .......... ..........  8% 95.3M 2s
  7500K .......... .......... .......... .......... ..........  9% 82.3M 2s
  7550K .......... .......... .......... .......... ..........  9% 77.0M 2s
  7600K .......... .......... .......... .......... ..........  9% 83.5M 2s
  7650K .......... .......... .......... .......... ..........  9% 89.3M 2s
  7700K .......... .......... .......... .......... ..........  9% 94.2M 2s
  7750K .......... .......... .......... .......... ..........  9% 76.7M 2s
  7800K .......... .......... .......... .......... ..........  9% 89.7M 2s
  7850K .......... .......... .......... .......... ..........  9% 90.0M 2s
  7900K .......... .......... .......... .......... ..........  9% 92.7M 2s
  7950K .......... .......... .......... .......... ..........  9% 71.9M 2s
  8000K .......... .......... .......... .......... ..........  9% 92.2M 2s
  8050K .......... .......... .......... .......... ..........  9% 81.6M 2s
  8100K .......... .......... .......... .......... ..........  9% 95.3M 2s
  8150K .......... .......... .......... .......... ..........  9% 81.4M 2s
  8200K .......... .......... .......... .......... ..........  9% 95.3M 2s
  8250K .......... .......... .......... .......... ..........  9% 82.6M 2s
  8300K .......... .......... .......... .......... ..........  9% 92.2M 2s
  8350K .......... .......... .......... .......... .......... 10% 71.9M 2s
  8400K .......... .......... .......... .......... .......... 10% 88.4M 2s
  8450K .......... .......... .......... .......... .......... 10% 94.6M 2s
  8500K .......... .......... .......... .......... .......... 10% 96.2M 2s
  8550K .......... .......... .......... .......... .......... 10% 93.2M 2s
  8600K .......... .......... .......... .......... .......... 10% 98.5M 2s
  8650K .......... .......... .......... .......... .......... 10% 99.6M 1s
  8700K .......... .......... .......... .......... .......... 10% 99.3M 1s
  8750K .......... .......... .......... .......... .......... 10% 77.5M 1s
  8800K .......... .......... .......... .......... .......... 10% 99.0M 1s
  8850K .......... .......... .......... .......... .......... 10%  101M 1s
  8900K .......... .......... .......... .......... .......... 10% 96.9M 1s
  8950K .......... .......... .......... .......... .......... 10% 90.5M 1s
  9000K .......... .......... .......... .......... .......... 10% 98.2M 1s
  9050K .......... .......... .......... .......... .......... 10%  105M 1s
  9100K .......... .......... .......... .......... .......... 10% 94.6M 1s
  9150K .......... .......... .......... .......... .......... 11% 78.3M 1s
  9200K .......... .......... .......... .......... .......... 11%  118M 1s
  9250K .......... .......... .......... .......... .......... 11% 96.5M 1s
  9300K .......... .......... .......... .......... .......... 11% 88.9M 1s
  9350K .......... .......... .......... .......... .......... 11% 90.3M 1s
  9400K .......... .......... .......... .......... .......... 11%  102M 1s
  9450K .......... .......... .......... .......... .......... 11%  100M 1s
  9500K .......... .......... .......... .......... .......... 11% 94.7M 1s
  9550K .......... .......... .......... .......... .......... 11% 82.2M 1s
  9600K .......... .......... .......... .......... .......... 11% 96.4M 1s
  9650K .......... .......... .......... .......... .......... 11% 85.9M 1s
  9700K .......... .......... .......... .......... .......... 11% 97.0M 1s
  9750K .......... .......... .......... .......... .......... 11% 78.2M 1s
  9800K .......... .......... .......... .......... .......... 11% 95.8M 1s
  9850K .......... .......... .......... .......... .......... 11% 87.8M 1s
  9900K .......... .......... .......... .......... .......... 11% 96.0M 1s
  9950K .......... .......... .......... .......... .......... 11% 82.9M 1s
 10000K .......... .......... .......... .......... .......... 12% 98.9M 1s
 10050K .......... .......... .......... .......... .......... 12% 97.1M 1s
 10100K .......... .......... .......... .......... .......... 12% 96.8M 1s
 10150K .......... .......... .......... .......... .......... 12% 81.5M 1s
 10200K .......... .......... .......... .......... .......... 12% 99.4M 1s
 10250K .......... .......... .......... .......... .......... 12% 88.4M 1s
 10300K .......... .......... .......... .......... .......... 12% 92.1M 1s
 10350K .......... .......... .......... .......... .......... 12% 82.1M 1s
 10400K .......... .......... .......... .......... .......... 12%  108M 1s
 10450K .......... .......... .......... .......... .......... 12% 85.4M 1s
 10500K .......... .......... .......... .......... .......... 12% 94.8M 1s
 10550K .......... .......... .......... .......... .......... 12% 6.22M 1s
 10600K .......... .......... .......... .......... .......... 12% 22.6M 1s
 10650K .......... .......... .......... .......... .......... 12% 70.5M 1s
 10700K .......... .......... .......... .......... .......... 12% 45.8M 1s
 10750K .......... .......... .......... .......... .......... 12% 47.8M 1s
 10800K .......... .......... .......... .......... .......... 12% 75.2M 1s
 10850K .......... .......... .......... .......... .......... 13% 73.1M 1s
 10900K .......... .......... .......... .......... .......... 13% 59.8M 1s
 10950K .......... .......... .......... .......... .......... 13% 57.0M 1s
 11000K .......... .......... .......... .......... .......... 13% 70.9M 1s
 11050K .......... .......... .......... .......... .......... 13% 62.6M 1s
 11100K .......... .......... .......... .......... .......... 13% 44.1M 1s
 11150K .......... .......... .......... .......... .......... 13% 61.7M 1s
 11200K .......... .......... .......... .......... .......... 13% 74.3M 1s
 11250K .......... .......... .......... .......... .......... 13% 68.2M 1s
 11300K .......... .......... .......... .......... .......... 13% 43.1M 1s
 11350K .......... .......... .......... .......... .......... 13% 63.8M 1s
 11400K .......... .......... .......... .......... .......... 13% 74.4M 1s
 11450K .......... .......... .......... .......... .......... 13% 73.3M 1s
 11500K .......... .......... .......... .......... .......... 13% 18.5M 1s
 11550K .......... .......... .......... .......... .......... 13% 37.5M 1s
 11600K .......... .......... .......... .......... .......... 13% 73.5M 1s
 11650K .......... .......... .......... .......... .......... 14% 77.1M 1s
 11700K .......... .......... .......... .......... .......... 14% 74.4M 1s
 11750K .......... .......... .......... .......... .......... 14% 62.6M 1s
 11800K .......... .......... .......... .......... .......... 14% 36.3M 1s
 11850K .......... .......... .......... .......... .......... 14% 37.1M 1s
 11900K .......... .......... .......... .......... .......... 14% 76.0M 1s
 11950K .......... .......... .......... .......... .......... 14% 56.0M 1s
 12000K .......... .......... .......... .......... .......... 14% 95.7M 1s
 12050K .......... .......... .......... .......... .......... 14% 72.0M 1s
 12100K .......... .......... .......... .......... .......... 14%  123M 1s
 12150K .......... .......... .......... .......... .......... 14% 98.4M 1s
 12200K .......... .......... .......... .......... .......... 14%  112M 1s
 12250K .......... .......... .......... .......... .......... 14%  134M 1s
 12300K .......... .......... .......... .......... .......... 14%  118M 1s
 12350K .......... .......... .......... .......... .......... 14% 88.2M 1s
 12400K .......... .......... .......... .......... .......... 14% 84.4M 1s
 12450K .......... .......... .......... .......... .......... 14% 81.9M 1s
 12500K .......... .......... .......... .......... .......... 15% 94.6M 1s
 12550K .......... .......... .......... .......... .......... 15% 89.3M 1s
 12600K .......... .......... .......... .......... .......... 15% 95.0M 1s
 12650K .......... .......... .......... .......... .......... 15% 88.3M 1s
 12700K .......... .......... .......... .......... .......... 15%  112M 1s
 12750K .......... .......... .......... .......... .......... 15%  108M 1s
 12800K .......... .......... .......... .......... .......... 15% 91.7M 1s
 12850K .......... .......... .......... .......... .......... 15%  103M 1s
 12900K .......... .......... .......... .......... .......... 15% 96.0M 1s
 12950K .......... .......... .......... .......... .......... 15%  100M 1s
 13000K .......... .......... .......... .......... .......... 15% 92.7M 1s
 13050K .......... .......... .......... .......... .......... 15%  101M 1s
 13100K .......... .......... .......... .......... .......... 15% 58.4M 1s
 13150K .......... .......... .......... .......... .......... 15% 67.0M 1s
 13200K .......... .......... .......... .......... .......... 15%  135M 1s
 13250K .......... .......... .......... .......... .......... 15%  133M 1s
 13300K .......... .......... .......... .......... .......... 15%  134M 1s
 13350K .......... .......... .......... .......... .......... 16%  122M 1s
 13400K .......... .......... .......... .......... .......... 16%  121M 1s
 13450K .......... .......... .......... .......... .......... 16% 93.8M 1s
 13500K .......... .......... .......... .......... .......... 16% 76.6M 1s
 13550K .......... .......... .......... .......... .......... 16% 97.7M 1s
 13600K .......... .......... .......... .......... .......... 16% 97.2M 1s
 13650K .......... .......... .......... .......... .......... 16% 91.3M 1s
 13700K .......... .......... .......... .......... .......... 16% 93.3M 1s
 13750K .......... .......... .......... .......... .......... 16% 83.5M 1s
 13800K .......... .......... .......... .......... .......... 16% 96.4M 1s
 13850K .......... .......... .......... .......... .......... 16% 84.8M 1s
 13900K .......... .......... .......... .......... .......... 16% 95.1M 1s
 13950K .......... .......... .......... .......... .......... 16% 98.7M 1s
 14000K .......... .......... .......... .......... .......... 16% 93.6M 1s
 14050K .......... .......... .......... .......... .......... 16% 80.8M 1s
 14100K .......... .......... .......... .......... .......... 16% 98.8M 1s
 14150K .......... .......... .......... .......... .......... 17% 97.1M 1s
 14200K .......... .......... .......... .......... .......... 17% 83.1M 1s
 14250K .......... .......... .......... .......... .......... 17%  117M 1s
 14300K .......... .......... .......... .......... .......... 17%  110M 1s
 14350K .......... .......... .......... .......... .......... 17% 95.1M 1s
 14400K .......... .......... .......... .......... .......... 17% 89.6M 1s
 14450K .......... .......... .......... .......... .......... 17% 90.7M 1s
 14500K .......... .......... .......... .......... .......... 17% 95.8M 1s
 14550K .......... .......... .......... .......... .......... 17% 75.4M 1s
 14600K .......... .......... .......... .......... .......... 17% 58.6M 1s
 14650K .......... .......... .......... .......... .......... 17% 97.4M 1s
 14700K .......... .......... .......... .......... .......... 17% 70.5M 1s
 14750K .......... .......... .......... .......... .......... 17% 54.2M 1s
 14800K .......... .......... .......... .......... .......... 17% 98.7M 1s
 14850K .......... .......... .......... .......... .......... 17% 96.5M 1s
 14900K .......... .......... .......... .......... .......... 17% 99.5M 1s
 14950K .......... .......... .......... .......... .......... 17% 86.6M 1s
 15000K .......... .......... .......... .......... .......... 18% 94.7M 1s
 15050K .......... .......... .......... .......... .......... 18% 75.6M 1s
 15100K .......... .......... .......... .......... .......... 18%  112M 1s
 15150K .......... .......... .......... .......... .......... 18%  127M 1s
 15200K .......... .......... .......... .......... .......... 18%  100M 1s
 15250K .......... .......... .......... .......... .......... 18% 78.1M 1s
 15300K .......... .......... .......... .......... .......... 18% 99.1M 1s
 15350K .......... .......... .......... .......... .......... 18% 70.3M 1s
 15400K .......... .......... .......... .......... .......... 18% 97.0M 1s
 15450K .......... .......... .......... .......... .......... 18% 83.6M 1s
 15500K .......... .......... .......... .......... .......... 18% 99.4M 1s
 15550K .......... .......... .......... .......... .......... 18% 96.5M 1s
 15600K .......... .......... .......... .......... .......... 18%  103M 1s
 15650K .......... .......... .......... .......... .......... 18%  106M 1s
 15700K .......... .......... .......... .......... .......... 18%  101M 1s
 15750K .......... .......... .......... .......... .......... 18%  103M 1s
 15800K .......... .......... .......... .......... .......... 18% 79.7M 1s
 15850K .......... .......... .......... .......... .......... 19% 81.1M 1s
 15900K .......... .......... .......... .......... .......... 19%  106M 1s
 15950K .......... .......... .......... .......... .......... 19% 96.9M 1s
 16000K .......... .......... .......... .......... .......... 19% 99.6M 1s
 16050K .......... .......... .......... .......... .......... 19% 94.6M 1s
 16100K .......... .......... .......... .......... .......... 19% 97.0M 1s
 16150K .......... .......... .......... .......... .......... 19% 98.2M 1s
 16200K .......... .......... .......... .......... .......... 19%  110M 1s
 16250K .......... .......... .......... .......... .......... 19% 89.7M 1s
 16300K .......... .......... .......... .......... .......... 19% 69.4M 1s
 16350K .......... .......... .......... .......... .......... 19% 83.6M 1s
 16400K .......... .......... .......... .......... .......... 19% 74.4M 1s
 16450K .......... .......... .......... .......... .......... 19% 88.6M 1s
 16500K .......... .......... .......... .......... .......... 19%  100M 1s
 16550K .......... .......... .......... .......... .......... 19% 99.2M 1s
 16600K .......... .......... .......... .......... .......... 19%  103M 1s
 16650K .......... .......... .......... .......... .......... 19% 76.1M 1s
 16700K .......... .......... .......... .......... .......... 20%  106M 1s
 16750K .......... .......... .......... .......... .......... 20% 99.5M 1s
 16800K .......... .......... .......... .......... .......... 20% 97.7M 1s
 16850K .......... .......... .......... .......... .......... 20% 89.0M 1s
 16900K .......... .......... .......... .......... .......... 20%  104M 1s
 16950K .......... .......... .......... .......... .......... 20% 78.5M 1s
 17000K .......... .......... .......... .......... .......... 20% 84.1M 1s
 17050K .......... .......... .......... .......... .......... 20% 86.6M 1s
 17100K .......... .......... .......... .......... .......... 20%  102M 1s
 17150K .......... .......... .......... .......... .......... 20%  102M 1s
 17200K .......... .......... .......... .......... .......... 20%  106M 1s
 17250K .......... .......... .......... .......... .......... 20% 90.9M 1s
 17300K .......... .......... .......... .......... .......... 20%  109M 1s
 17350K .......... .......... .......... .......... .......... 20% 78.5M 1s
 17400K .......... .......... .......... .......... .......... 20%  102M 1s
 17450K .......... .......... .......... .......... .......... 20% 75.8M 1s
 17500K .......... .......... .......... .......... .......... 21% 98.8M 1s
 17550K .......... .......... .......... .......... .......... 21%  102M 1s
 17600K .......... .......... .......... .......... .......... 21%  100M 1s
 17650K .......... .......... .......... .......... .......... 21% 92.3M 1s
 17700K .......... .......... .......... .......... .......... 21%  102M 1s
 17750K .......... .......... .......... .......... .......... 21% 99.6M 1s
 17800K .......... .......... .......... .......... .......... 21%  100M 1s
 17850K .......... .......... .......... .......... .......... 21% 89.5M 1s
 17900K .......... .......... .......... .......... .......... 21%  106M 1s
 17950K .......... .......... .......... .......... .......... 21% 99.2M 1s
 18000K .......... .......... .......... .......... .......... 21% 79.3M 1s
 18050K .......... .......... .......... .......... .......... 21% 91.7M 1s
 18100K .......... .......... .......... .......... .......... 21% 97.8M 1s
 18150K .......... .......... .......... .......... .......... 21% 97.4M 1s
 18200K .......... .......... .......... .......... .......... 21% 98.3M 1s
 18250K .......... .......... .......... .......... .......... 21% 87.4M 1s
 18300K .......... .......... .......... .......... .......... 21%  107M 1s
 18350K .......... .......... .......... .......... .......... 22%  104M 1s
 18400K .......... .......... .......... .......... .......... 22%  100M 1s
 18450K .......... .......... .......... .......... .......... 22% 93.7M 1s
 18500K .......... .......... .......... .......... .......... 22% 97.8M 1s
 18550K .......... .......... .......... .......... .......... 22%  103M 1s
 18600K .......... .......... .......... .......... .......... 22% 72.5M 1s
 18650K .......... .......... .......... .......... .......... 22% 87.6M 1s
 18700K .......... .......... .......... .......... .......... 22%  101M 1s
 18750K .......... .......... .......... .......... .......... 22%  102M 1s
 18800K .......... .......... .......... .......... .......... 22% 74.4M 1s
 18850K .......... .......... .......... .......... .......... 22% 92.5M 1s
 18900K .......... .......... .......... .......... .......... 22%  102M 1s
 18950K .......... .......... .......... .......... .......... 22%  104M 1s
 19000K .......... .......... .......... .......... .......... 22%  106M 1s
 19050K .......... .......... .......... .......... .......... 22% 85.9M 1s
 19100K .......... .......... .......... .......... .......... 22%  105M 1s
 19150K .......... .......... .......... .......... .......... 22% 98.3M 1s
 19200K .......... .......... .......... .......... .......... 23%  105M 1s
 19250K .......... .......... .......... .......... .......... 23% 95.8M 1s
 19300K .......... .......... .......... .......... .......... 23%  101M 1s
 19350K .......... .......... .......... .......... .......... 23% 93.1M 1s
 19400K .......... .......... .......... .......... .......... 23% 94.4M 1s
 19450K .......... .......... .......... .......... .......... 23% 78.0M 1s
 19500K .......... .......... .......... .......... .......... 23%  118M 1s
 19550K .......... .......... .......... .......... .......... 23%  104M 1s
 19600K .......... .......... .......... .......... .......... 23% 75.3M 1s
 19650K .......... .......... .......... .......... .......... 23% 92.7M 1s
 19700K .......... .......... .......... .......... .......... 23% 99.9M 1s
 19750K .......... .......... .......... .......... .......... 23%  100M 1s
 19800K .......... .......... .......... .......... .......... 23% 51.8M 1s
 19850K .......... .......... .......... .......... .......... 23% 66.7M 1s
 19900K .......... .......... .......... .......... .......... 23% 96.0M 1s
 19950K .......... .......... .......... .......... .......... 23%  100M 1s
 20000K .......... .......... .......... .......... .......... 24% 84.1M 1s
 20050K .......... .......... .......... .......... .......... 24% 95.1M 1s
 20100K .......... .......... .......... .......... .......... 24% 97.7M 1s
 20150K .......... .......... .......... .......... .......... 24% 84.2M 1s
 20200K .......... .......... .......... .......... .......... 24%  106M 1s
 20250K .......... .......... .......... .......... .......... 24% 85.6M 1s
 20300K .......... .......... .......... .......... .......... 24% 97.5M 1s
 20350K .......... .......... .......... .......... .......... 24%  100M 1s
 20400K .......... .......... .......... .......... .......... 24% 98.8M 1s
 20450K .......... .......... .......... .......... .......... 24% 91.0M 1s
 20500K .......... .......... .......... .......... .......... 24%  115M 1s
 20550K .......... .......... .......... .......... .......... 24% 92.1M 1s
 20600K .......... .......... .......... .......... .......... 24% 72.5M 1s
 20650K .......... .......... .......... .......... .......... 24% 61.2M 1s
 20700K .......... .......... .......... .......... .......... 24%  109M 1s
 20750K .......... .......... .......... .......... .......... 24% 96.3M 1s
 20800K .......... .......... .......... .......... .......... 24% 98.5M 1s
 20850K .......... .......... .......... .......... .......... 25% 63.2M 1s
 20900K .......... .......... .......... .......... .......... 25%  103M 1s
 20950K .......... .......... .......... .......... .......... 25% 98.8M 1s
 21000K .......... .......... .......... .......... .......... 25% 71.9M 1s
 21050K .......... .......... .......... .......... .......... 25% 86.0M 1s
 21100K .......... .......... .......... .......... .......... 25% 96.8M 1s
 21150K .......... .......... .......... .......... .......... 25% 99.3M 1s
 21200K .......... .......... .......... .......... .......... 25% 97.9M 1s
 21250K .......... .......... .......... .......... .......... 25% 91.5M 1s
 21300K .......... .......... .......... .......... .......... 25% 97.0M 1s
 21350K .......... .......... .......... .......... .......... 25%  113M 1s
 21400K .......... .......... .......... .......... .......... 25% 94.0M 1s
 21450K .......... .......... .......... .......... .......... 25% 40.4M 1s
 21500K .......... .......... .......... .......... .......... 25%  108M 1s
 21550K .......... .......... .......... .......... .......... 25% 53.6M 1s
 21600K .......... .......... .......... .......... .......... 25%  103M 1s
 21650K .......... .......... .......... .......... .......... 25% 83.0M 1s
 21700K .......... .......... .......... .......... .......... 26%  105M 1s
 21750K .......... .......... .......... .......... .......... 26%  101M 1s
 21800K .......... .......... .......... .......... .......... 26% 83.4M 1s
 21850K .......... .......... .......... .......... .......... 26% 72.1M 1s
 21900K .......... .......... .......... .......... .......... 26%  107M 1s
 21950K .......... .......... .......... .......... .......... 26% 37.5M 1s
 22000K .......... .......... .......... .......... .......... 26%  105M 1s
 22050K .......... .......... .......... .......... .......... 26% 52.6M 1s
 22100K .......... .......... .......... .......... .......... 26% 60.7M 1s
 22150K .......... .......... .......... .......... .......... 26% 57.6M 1s
 22200K .......... .......... .......... .......... .......... 26% 62.6M 1s
 22250K .......... .......... .......... .......... .......... 26% 51.1M 1s
 22300K .......... .......... .......... .......... .......... 26% 81.1M 1s
 22350K .......... .......... .......... .......... .......... 26%  102M 1s
 22400K .......... .......... .......... .......... .......... 26% 75.1M 1s
 22450K .......... .......... .......... .......... .......... 26% 92.7M 1s
 22500K .......... .......... .......... .......... .......... 26% 92.5M 1s
 22550K .......... .......... .......... .......... .......... 27% 95.6M 1s
 22600K .......... .......... .......... .......... .......... 27% 66.0M 1s
 22650K .......... .......... .......... .......... .......... 27%  100M 1s
 22700K .......... .......... .......... .......... .......... 27%  119M 1s
 22750K .......... .......... .......... .......... .......... 27% 97.4M 1s
 22800K .......... .......... .......... .......... .......... 27%  107M 1s
 22850K .......... .......... .......... .......... .......... 27% 99.7M 1s
 22900K .......... .......... .......... .......... .......... 27%  105M 1s
 22950K .......... .......... .......... .......... .......... 27% 65.9M 1s
 23000K .......... .......... .......... .......... .......... 27% 74.2M 1s
 23050K .......... .......... .......... .......... .......... 27% 83.0M 1s
 23100K .......... .......... .......... .......... .......... 27% 90.3M 1s
 23150K .......... .......... .......... .......... .......... 27%  112M 1s
 23200K .......... .......... .......... .......... .......... 27%  103M 1s
 23250K .......... .......... .......... .......... .......... 27% 89.6M 1s
 23300K .......... .......... .......... .......... .......... 27%  103M 1s
 23350K .......... .......... .......... .......... .......... 28% 91.8M 1s
 23400K .......... .......... .......... .......... .......... 28%  102M 1s
 23450K .......... .......... .......... .......... .......... 28% 89.1M 1s
 23500K .......... .......... .......... .......... .......... 28%  106M 1s
 23550K .......... .......... .......... .......... .......... 28%  103M 1s
 23600K .......... .......... .......... .......... .......... 28%  122M 1s
 23650K .......... .......... .......... .......... .......... 28% 65.2M 1s
 23700K .......... .......... .......... .......... .......... 28% 94.6M 1s
 23750K .......... .......... .......... .......... .......... 28% 97.0M 1s
 23800K .......... .......... .......... .......... .......... 28% 96.4M 1s
 23850K .......... .......... .......... .......... .......... 28% 82.9M 1s
 23900K .......... .......... .......... .......... .......... 28%  100M 1s
 23950K .......... .......... .......... .......... .......... 28%  101M 1s
 24000K .......... .......... .......... .......... .......... 28%  104M 1s
 24050K .......... .......... .......... .......... .......... 28% 80.7M 1s
 24100K .......... .......... .......... .......... .......... 28% 97.1M 1s
 24150K .......... .......... .......... .......... .......... 28% 98.7M 1s
 24200K .......... .......... .......... .......... .......... 29% 99.9M 1s
 24250K .......... .......... .......... .......... .......... 29% 87.8M 1s
 24300K .......... .......... .......... .......... .......... 29%  101M 1s
 24350K .......... .......... .......... .......... .......... 29%  100M 1s
 24400K .......... .......... .......... .......... .......... 29% 96.7M 1s
 24450K .......... .......... .......... .......... .......... 29% 96.0M 1s
 24500K .......... .......... .......... .......... .......... 29%  104M 1s
 24550K .......... .......... .......... .......... .......... 29% 97.4M 1s
 24600K .......... .......... .......... .......... .......... 29% 99.4M 1s
 24650K .......... .......... .......... .......... .......... 29% 88.8M 1s
 24700K .......... .......... .......... .......... .......... 29% 98.7M 1s
 24750K .......... .......... .......... .......... .......... 29%  107M 1s
 24800K .......... .......... .......... .......... .......... 29% 99.6M 1s
 24850K .......... .......... .......... .......... .......... 29% 81.4M 1s
 24900K .......... .......... .......... .......... .......... 29% 96.1M 1s
 24950K .......... .......... .......... .......... .......... 29%  104M 1s
 25000K .......... .......... .......... .......... .......... 29% 37.9M 1s
 25050K .......... .......... .......... .......... .......... 30% 32.9M 1s
 25100K .......... .......... .......... .......... .......... 30% 40.1M 1s
 25150K .......... .......... .......... .......... .......... 30% 39.0M 1s
 25200K .......... .......... .......... .......... .......... 30% 39.6M 1s
 25250K .......... .......... .......... .......... .......... 30% 40.7M 1s
 25300K .......... .......... .......... .......... .......... 30% 32.8M 1s
 25350K .......... .......... .......... .......... .......... 30% 49.7M 1s
 25400K .......... .......... .......... .......... .......... 30% 64.1M 1s
 25450K .......... .......... .......... .......... .......... 30% 47.3M 1s
 25500K .......... .......... .......... .......... .......... 30% 49.9M 1s
 25550K .......... .......... .......... .......... .......... 30% 54.7M 1s
 25600K .......... .......... .......... .......... .......... 30% 51.7M 1s
 25650K .......... .......... .......... .......... .......... 30% 48.2M 1s
 25700K .......... .......... .......... .......... .......... 30% 55.9M 1s
 25750K .......... .......... .......... .......... .......... 30% 51.7M 1s
 25800K .......... .......... .......... .......... .......... 30% 57.6M 1s
 25850K .......... .......... .......... .......... .......... 31% 45.9M 1s
 25900K .......... .......... .......... .......... .......... 31% 50.7M 1s
 25950K .......... .......... .......... .......... .......... 31% 51.7M 1s
 26000K .......... .......... .......... .......... .......... 31% 46.1M 1s
 26050K .......... .......... .......... .......... .......... 31% 45.1M 1s
 26100K .......... .......... .......... .......... .......... 31% 51.8M 1s
 26150K .......... .......... .......... .......... .......... 31% 58.1M 1s
 26200K .......... .......... .......... .......... .......... 31% 49.5M 1s
 26250K .......... .......... .......... .......... .......... 31% 40.6M 1s
 26300K .......... .......... .......... .......... .......... 31% 60.8M 1s
 26350K .......... .......... .......... .......... .......... 31% 44.7M 1s
 26400K .......... .......... .......... .......... .......... 31% 55.1M 1s
 26450K .......... .......... .......... .......... .......... 31% 44.9M 1s
 26500K .......... .......... .......... .......... .......... 31% 58.4M 1s
 26550K .......... .......... .......... .......... .......... 31% 48.7M 1s
 26600K .......... .......... .......... .......... .......... 31% 51.7M 1s
 26650K .......... .......... .......... .......... .......... 31% 42.3M 1s
 26700K .......... .......... .......... .......... .......... 32% 55.7M 1s
 26750K .......... .......... .......... .......... .......... 32% 47.0M 1s
 26800K .......... .......... .......... .......... .......... 32% 47.9M 1s
 26850K .......... .......... .......... .......... .......... 32% 49.9M 1s
 26900K .......... .......... .......... .......... .......... 32% 52.1M 1s
 26950K .......... .......... .......... .......... .......... 32% 19.4M 1s
 27000K .......... .......... .......... .......... .......... 32% 69.8M 1s
 27050K .......... .......... .......... .......... .......... 32%  100M 1s
 27100K .......... .......... .......... .......... .......... 32% 75.6M 1s
 27150K .......... .......... .......... .......... .......... 32% 65.9M 1s
 27200K .......... .......... .......... .......... .......... 32% 72.0M 1s
 27250K .......... .......... .......... .......... .......... 32% 79.1M 1s
 27300K .......... .......... .......... .......... .......... 32%  101M 1s
 27350K .......... .......... .......... .......... .......... 32%  116M 1s
 27400K .......... .......... .......... .......... .......... 32% 99.0M 1s
 27450K .......... .......... .......... .......... .......... 32% 85.3M 1s
 27500K .......... .......... .......... .......... .......... 32%  103M 1s
 27550K .......... .......... .......... .......... .......... 33%  111M 1s
 27600K .......... .......... .......... .......... .......... 33% 95.6M 1s
 27650K .......... .......... .......... .......... .......... 33% 93.7M 1s
 27700K .......... .......... .......... .......... .......... 33%  114M 1s
 27750K .......... .......... .......... .......... .......... 33%  121M 1s
 27800K .......... .......... .......... .......... .......... 33%  127M 1s
 27850K .......... .......... .......... .......... .......... 33% 87.0M 1s
 27900K .......... .......... .......... .......... .......... 33% 97.4M 1s
 27950K .......... .......... .......... .......... .......... 33% 97.7M 1s
 28000K .......... .......... .......... .......... .......... 33% 92.8M 1s
 28050K .......... .......... .......... .......... .......... 33% 85.0M 1s
 28100K .......... .......... .......... .......... .......... 33%  101M 1s
 28150K .......... .......... .......... .......... .......... 33%  111M 1s
 28200K .......... .......... .......... .......... .......... 33% 92.8M 1s
 28250K .......... .......... .......... .......... .......... 33% 72.4M 1s
 28300K .......... .......... .......... .......... .......... 33% 97.0M 1s
 28350K .......... .......... .......... .......... .......... 34% 94.9M 1s
 28400K .......... .......... .......... .......... .......... 34% 92.2M 1s
 28450K .......... .......... .......... .......... .......... 34% 73.9M 1s
 28500K .......... .......... .......... .......... .......... 34% 98.0M 1s
 28550K .......... .......... .......... .......... .......... 34% 92.0M 1s
 28600K .......... .......... .......... .......... .......... 34% 93.3M 1s
 28650K .......... .......... .......... .......... .......... 34%  106M 1s
 28700K .......... .......... .......... .......... .......... 34%  123M 1s
 28750K .......... .......... .......... .......... .......... 34%  101M 1s
 28800K .......... .......... .......... .......... .......... 34% 90.2M 1s
 28850K .......... .......... .......... .......... .......... 34% 85.1M 1s
 28900K .......... .......... .......... .......... .......... 34% 72.7M 1s
 28950K .......... .......... .......... .......... .......... 34% 88.1M 1s
 29000K .......... .......... .......... .......... .......... 34% 75.4M 1s
 29050K .......... .......... .......... .......... .......... 34% 71.8M 1s
 29100K .......... .......... .......... .......... .......... 34% 87.2M 1s
 29150K .......... .......... .......... .......... .......... 34% 92.5M 1s
 29200K .......... .......... .......... .......... .......... 35% 92.2M 1s
 29250K .......... .......... .......... .......... .......... 35% 73.7M 1s
 29300K .......... .......... .......... .......... .......... 35% 87.3M 1s
 29350K .......... .......... .......... .......... .......... 35% 80.3M 1s
 29400K .......... .......... .......... .......... .......... 35% 89.9M 1s
 29450K .......... .......... .......... .......... .......... 35% 80.9M 1s
 29500K .......... .......... .......... .......... .......... 35%  133M 1s
 29550K .......... .......... .......... .......... .......... 35%  129M 1s
 29600K .......... .......... .......... .......... .......... 35%  121M 1s
 29650K .......... .......... .......... .......... .......... 35% 83.5M 1s
 29700K .......... .......... .......... .......... .......... 35% 80.4M 1s
 29750K .......... .......... .......... .......... .......... 35% 92.1M 1s
 29800K .......... .......... .......... .......... .......... 35% 93.6M 1s
 29850K .......... .......... .......... .......... .......... 35% 73.4M 1s
 29900K .......... .......... .......... .......... .......... 35% 92.8M 1s
 29950K .......... .......... .......... .......... .......... 35% 89.5M 1s
 30000K .......... .......... .......... .......... .......... 35% 92.7M 1s
 30050K .......... .......... .......... .......... .......... 36% 78.5M 1s
 30100K .......... .......... .......... .......... .......... 36% 90.4M 1s
 30150K .......... .......... .......... .......... .......... 36% 97.2M 1s
 30200K .......... .......... .......... .......... .......... 36% 97.3M 1s
 30250K .......... .......... .......... .......... .......... 36% 74.9M 1s
 30300K .......... .......... .......... .......... .......... 36% 94.6M 1s
 30350K .......... .......... .......... .......... .......... 36%  105M 1s
 30400K .......... .......... .......... .......... .......... 36%  128M 1s
 30450K .......... .......... .......... .......... .......... 36%  113M 1s
 30500K .......... .......... .......... .......... .......... 36%  126M 1s
 30550K .......... .......... .......... .......... .......... 36%  102M 1s
 30600K .......... .......... .......... .......... .......... 36% 90.0M 1s
 30650K .......... .......... .......... .......... .......... 36% 72.2M 1s
 30700K .......... .......... .......... .......... .......... 36% 91.0M 1s
 30750K .......... .......... .......... .......... .......... 36% 90.3M 1s
 30800K .......... .......... .......... .......... .......... 36% 81.7M 1s
 30850K .......... .......... .......... .......... .......... 36% 83.8M 1s
 30900K .......... .......... .......... .......... .......... 37% 91.8M 1s
 30950K .......... .......... .......... .......... .......... 37% 81.7M 1s
 31000K .......... .......... .......... .......... .......... 37% 89.1M 1s
 31050K .......... .......... .......... .......... .......... 37% 72.6M 1s
 31100K .......... .......... .......... .......... .......... 37% 90.4M 1s
 31150K .......... .......... .......... .......... .......... 37% 91.5M 1s
 31200K .......... .......... .......... .......... .......... 37% 94.4M 1s
 31250K .......... .......... .......... .......... .......... 37% 87.7M 1s
 31300K .......... .......... .......... .......... .......... 37%  132M 1s
 31350K .......... .......... .......... .......... .......... 37%  131M 1s
 31400K .......... .......... .......... .......... .......... 37% 99.7M 1s
 31450K .......... .......... .......... .......... .......... 37% 78.0M 1s
 31500K .......... .......... .......... .......... .......... 37% 95.3M 1s
 31550K .......... .......... .......... .......... .......... 37% 91.9M 1s
 31600K .......... .......... .......... .......... .......... 37% 82.6M 1s
 31650K .......... .......... .......... .......... .......... 37% 91.0M 1s
 31700K .......... .......... .......... .......... .......... 38% 92.1M 1s
 31750K .......... .......... .......... .......... .......... 38% 92.9M 1s
 31800K .......... .......... .......... .......... .......... 38% 82.5M 1s
 31850K .......... .......... .......... .......... .......... 38% 81.6M 1s
 31900K .......... .......... .......... .......... .......... 38% 91.7M 1s
 31950K .......... .......... .......... .......... .......... 38% 83.3M 1s
 32000K .......... .......... .......... .......... .......... 38% 90.3M 1s
 32050K .......... .......... .......... .......... .......... 38% 85.1M 1s
 32100K .......... .......... .......... .......... .......... 38% 97.2M 1s
 32150K .......... .......... .......... .......... .......... 38% 95.3M 1s
 32200K .......... .......... .......... .......... .......... 38%  128M 1s
 32250K .......... .......... .......... .......... .......... 38%  110M 1s
 32300K .......... .......... .......... .......... .......... 38%  122M 1s
 32350K .......... .......... .......... .......... .......... 38% 88.0M 1s
 32400K .......... .......... .......... .......... .......... 38% 88.6M 1s
 32450K .......... .......... .......... .......... .......... 38% 76.0M 1s
 32500K .......... .......... .......... .......... .......... 38% 91.2M 1s
 32550K .......... .......... .......... .......... .......... 39% 92.3M 1s
 32600K .......... .......... .......... .......... .......... 39% 91.4M 1s
 32650K .......... .......... .......... .......... .......... 39% 72.0M 1s
 32700K .......... .......... .......... .......... .......... 39% 91.5M 1s
 32750K .......... .......... .......... .......... .......... 39% 80.5M 1s
 32800K .......... .......... .......... .......... .......... 39% 87.9M 1s
 32850K .......... .......... .......... .......... .......... 39% 73.9M 1s
 32900K .......... .......... .......... .......... .......... 39% 91.3M 1s
 32950K .......... .......... .......... .......... .......... 39% 90.5M 1s
 33000K .......... .......... .......... .......... .......... 39% 95.4M 1s
 33050K .......... .......... .......... .......... .......... 39% 85.9M 1s
 33100K .......... .......... .......... .......... .......... 39%  128M 1s
 33150K .......... .......... .......... .......... .......... 39%  125M 1s
 33200K .......... .......... .......... .......... .......... 39%  124M 1s
 33250K .......... .......... .......... .......... .......... 39% 74.1M 1s
 33300K .......... .......... .......... .......... .......... 39% 89.9M 1s
 33350K .......... .......... .......... .......... .......... 39% 88.6M 1s
 33400K .......... .......... .......... .......... .......... 40% 81.5M 1s
 33450K .......... .......... .......... .......... .......... 40% 77.8M 1s
 33500K .......... .......... .......... .......... .......... 40% 79.3M 1s
 33550K .......... .......... .......... .......... .......... 40% 90.3M 1s
 33600K .......... .......... .......... .......... .......... 40% 88.8M 1s
 33650K .......... .......... .......... .......... .......... 40% 75.2M 1s
 33700K .......... .......... .......... .......... .......... 40% 89.6M 1s
 33750K .......... .......... .......... .......... .......... 40% 92.7M 1s
 33800K .......... .......... .......... .......... .......... 40%  113M 1s
 33850K .......... .......... .......... .......... .......... 40% 72.2M 1s
 33900K .......... .......... .......... .......... .......... 40% 91.4M 1s
 33950K .......... .......... .......... .......... .......... 40% 98.4M 1s
 34000K .......... .......... .......... .......... .......... 40%  125M 1s
 34050K .......... .......... .......... .......... .......... 40%  118M 1s
 34100K .......... .......... .......... .......... .......... 40%  119M 1s
 34150K .......... .......... .......... .......... .......... 40% 80.0M 1s
 34200K .......... .......... .......... .......... .......... 41% 90.9M 1s
 34250K .......... .......... .......... .......... .......... 41% 80.6M 1s
 34300K .......... .......... .......... .......... .......... 41% 80.8M 1s
 34350K .......... .......... .......... .......... .......... 41% 87.5M 1s
 34400K .......... .......... .......... .......... .......... 41% 92.7M 1s
 34450K .......... .......... .......... .......... .......... 41% 75.6M 1s
 34500K .......... .......... .......... .......... .......... 41% 47.6M 1s
 34550K .......... .......... .......... .......... .......... 41% 88.6M 1s
 34600K .......... .......... .......... .......... .......... 41% 85.5M 1s
 34650K .......... .......... .......... .......... .......... 41% 88.0M 1s
 34700K .......... .......... .......... .......... .......... 41% 88.0M 1s
 34750K .......... .......... .......... .......... .......... 41% 92.0M 1s
 34800K .......... .......... .......... .......... .......... 41% 89.6M 1s
 34850K .......... .......... .......... .......... .......... 41%  115M 1s
 34900K .......... .......... .......... .......... .......... 41%  137M 1s
 34950K .......... .......... .......... .......... .......... 41%  126M 1s
 35000K .......... .......... .......... .......... .......... 41% 88.3M 1s
 35050K .......... .......... .......... .......... .......... 42% 78.0M 1s
 35100K .......... .......... .......... .......... .......... 42% 92.1M 1s
 35150K .......... .......... .......... .......... .......... 42% 79.7M 1s
 35200K .......... .......... .......... .......... .......... 42% 92.7M 1s
 35250K .......... .......... .......... .......... .......... 42% 83.5M 1s
 35300K .......... .......... .......... .......... .......... 42% 83.6M 1s
 35350K .......... .......... .......... .......... .......... 42% 87.8M 1s
 35400K .......... .......... .......... .......... .......... 42% 94.9M 1s
 35450K .......... .......... .......... .......... .......... 42% 76.1M 1s
 35500K .......... .......... .......... .......... .......... 42% 92.7M 1s
 35550K .......... .......... .......... .......... .......... 42% 99.8M 1s
 35600K .......... .......... .......... .......... .......... 42% 91.1M 1s
 35650K .......... .......... .......... .......... .......... 42% 87.8M 1s
 35700K .......... .......... .......... .......... .......... 42% 93.7M 1s
 35750K .......... .......... .......... .......... .......... 42%  130M 1s
 35800K .......... .......... .......... .......... .......... 42%  125M 1s
 35850K .......... .......... .......... .......... .......... 42%  102M 1s
 35900K .......... .......... .......... .......... .......... 43% 91.0M 1s
 35950K .......... .......... .......... .......... .......... 43% 91.4M 1s
 36000K .......... .......... .......... .......... .......... 43% 91.4M 1s
 36050K .......... .......... .......... .......... .......... 43% 76.6M 1s
 36100K .......... .......... .......... .......... .......... 43% 91.3M 1s
 36150K .......... .......... .......... .......... .......... 43% 91.5M 1s
 36200K .......... .......... .......... .......... .......... 43% 91.9M 1s
 36250K .......... .......... .......... .......... .......... 43% 71.2M 1s
 36300K .......... .......... .......... .......... .......... 43% 92.2M 1s
 36350K .......... .......... .......... .......... .......... 43% 82.5M 1s
 36400K .......... .......... .......... .......... .......... 43% 89.2M 1s
 36450K .......... .......... .......... .......... .......... 43% 84.6M 1s
 36500K .......... .......... .......... .......... .......... 43% 87.5M 1s
 36550K .......... .......... .......... .......... .......... 43%  109M 1s
 36600K .......... .......... .......... .......... .......... 43% 91.2M 1s
 36650K .......... .......... .......... .......... .......... 43%  103M 1s
 36700K .......... .......... .......... .......... .......... 44%  131M 1s
 36750K .......... .......... .......... .......... .......... 44%  121M 1s
 36800K .......... .......... .......... .......... .......... 44%  101M 1s
 36850K .......... .......... .......... .......... .......... 44% 82.3M 1s
 36900K .......... .......... .......... .......... .......... 44% 92.6M 1s
 36950K .......... .......... .......... .......... .......... 44% 80.0M 1s
 37000K .......... .......... .......... .......... .......... 44% 93.3M 1s
 37050K .......... .......... .......... .......... .......... 44% 72.7M 1s
 37100K .......... .......... .......... .......... .......... 44% 89.2M 1s
 37150K .......... .......... .......... .......... .......... 44% 94.5M 1s
 37200K .......... .......... .......... .......... .......... 44% 92.4M 1s
 37250K .......... .......... .......... .......... .......... 44% 76.9M 1s
 37300K .......... .......... .......... .......... .......... 44% 91.7M 1s
 37350K .......... .......... .......... .......... .......... 44% 90.6M 1s
 37400K .......... .......... .......... .......... .......... 44% 95.6M 1s
 37450K .......... .......... .......... .......... .......... 44% 71.1M 1s
 37500K .......... .......... .......... .......... .......... 44% 93.6M 1s
 37550K .......... .......... .......... .......... .......... 45%  117M 1s
 37600K .......... .......... .......... .......... .......... 45%  126M 1s
 37650K .......... .......... .......... .......... .......... 45% 97.1M 1s
 37700K .......... .......... .......... .......... .......... 45% 87.5M 1s
 37750K .......... .......... .......... .......... .......... 45% 93.9M 1s
 37800K .......... .......... .......... .......... .......... 45% 91.1M 1s
 37850K .......... .......... .......... .......... .......... 45% 71.8M 1s
 37900K .......... .......... .......... .......... .......... 45% 93.4M 1s
 37950K .......... .......... .......... .......... .......... 45% 82.8M 1s
 38000K .......... .......... .......... .......... .......... 45% 91.0M 1s
 38050K .......... .......... .......... .......... .......... 45% 84.8M 1s
 38100K .......... .......... .......... .......... .......... 45% 66.8M 1s
 38150K .......... .......... .......... .......... .......... 45% 68.8M 1s
 38200K .......... .......... .......... .......... .......... 45% 94.3M 1s
 38250K .......... .......... .......... .......... .......... 45% 70.8M 1s
 38300K .......... .......... .......... .......... .......... 45% 97.5M 1s
 38350K .......... .......... .......... .......... .......... 45% 97.2M 1s
 38400K .......... .......... .......... .......... .......... 46%  110M 1s
 38450K .......... .......... .......... .......... .......... 46%  116M 1s
 38500K .......... .......... .......... .......... .......... 46%  125M 1s
 38550K .......... .......... .......... .......... .......... 46% 90.8M 1s
 38600K .......... .......... .......... .......... .......... 46% 90.5M 1s
 38650K .......... .......... .......... .......... .......... 46% 73.2M 1s
 38700K .......... .......... .......... .......... .......... 46% 92.1M 1s
 38750K .......... .......... .......... .......... .......... 46% 79.1M 1s
 38800K .......... .......... .......... .......... .......... 46% 91.6M 1s
 38850K .......... .......... .......... .......... .......... 46% 83.7M 1s
 38900K .......... .......... .......... .......... .......... 46% 94.2M 1s
 38950K .......... .......... .......... .......... .......... 46% 82.4M 1s
 39000K .......... .......... .......... .......... .......... 46%  106M 1s
 39050K .......... .......... .......... .......... .......... 46% 83.4M 1s
 39100K .......... .......... .......... .......... .......... 46%  112M 1s
 39150K .......... .......... .......... .......... .......... 46% 92.1M 1s
 39200K .......... .......... .......... .......... .......... 46% 92.2M 1s
 39250K .......... .......... .......... .......... .......... 47% 79.4M 1s
 39300K .......... .......... .......... .......... .......... 47%  115M 1s
 39350K .......... .......... .......... .......... .......... 47%  127M 1s
 39400K .......... .......... .......... .......... .......... 47%  124M 1s
 39450K .......... .......... .......... .......... .......... 47% 79.5M 1s
 39500K .......... .......... .......... .......... .......... 47% 92.8M 1s
 39550K .......... .......... .......... .......... .......... 47% 90.8M 1s
 39600K .......... .......... .......... .......... .......... 47% 81.4M 1s
 39650K .......... .......... .......... .......... .......... 47% 85.1M 1s
 39700K .......... .......... .......... .......... .......... 47% 74.6M 1s
 39750K .......... .......... .......... .......... .......... 47% 91.7M 1s
 39800K .......... .......... .......... .......... .......... 47% 90.5M 1s
 39850K .......... .......... .......... .......... .......... 47% 72.6M 1s
 39900K .......... .......... .......... .......... .......... 47% 93.6M 1s
 39950K .......... .......... .......... .......... .......... 47%  103M 1s
 40000K .......... .......... .......... .......... .......... 47% 94.0M 1s
 40050K .......... .......... .......... .......... .......... 48% 76.1M 1s
 40100K .......... .......... .......... .......... .......... 48% 92.7M 1s
 40150K .......... .......... .......... .......... .......... 48% 89.1M 1s
 40200K .......... .......... .......... .......... .......... 48%  116M 1s
 40250K .......... .......... .......... .......... .......... 48%  105M 1s
 40300K .......... .......... .......... .......... .......... 48% 89.7M 1s
 40350K .......... .......... .......... .......... .......... 48% 81.7M 1s
 40400K .......... .......... .......... .......... .......... 48% 89.6M 1s
 40450K .......... .......... .......... .......... .......... 48% 82.5M 1s
 40500K .......... .......... .......... .......... .......... 48% 83.1M 1s
 40550K .......... .......... .......... .......... .......... 48% 91.6M 1s
 40600K .......... .......... .......... .......... .......... 48% 92.4M 1s
 40650K .......... .......... .......... .......... .......... 48% 78.0M 1s
 40700K .......... .......... .......... .......... .......... 48% 93.6M 1s
 40750K .......... .......... .......... .......... .......... 48% 96.1M 1s
 40800K .......... .......... .......... .......... .......... 48% 94.8M 1s
 40850K .......... .......... .......... .......... .......... 48% 88.5M 1s
 40900K .......... .......... .......... .......... .......... 49% 94.8M 1s
 40950K .......... .......... .......... .......... .......... 49% 94.3M 1s
 41000K .......... .......... .......... .......... .......... 49% 86.9M 1s
 41050K .......... .......... .......... .......... .......... 49% 81.2M 1s
 41100K .......... .......... .......... .......... .......... 49%  122M 1s
 41150K .......... .......... .......... .......... .......... 49%  102M 1s
 41200K .......... .......... .......... .......... .......... 49% 98.6M 1s
 41250K .......... .......... .......... .......... .......... 49% 75.0M 1s
 41300K .......... .......... .......... .......... .......... 49% 88.2M 1s
 41350K .......... .......... .......... .......... .......... 49% 82.0M 1s
 41400K .......... .......... .......... .......... .......... 49% 90.4M 1s
 41450K .......... .......... .......... .......... .......... 49% 73.7M 1s
 41500K .......... .......... .......... .......... .......... 49%  113M 1s
 41550K .......... .......... .......... .......... .......... 49% 78.6M 1s
 41600K .......... .......... .......... .......... .......... 49% 98.3M 1s
 41650K .......... .......... .......... .......... .......... 49% 83.6M 1s
 41700K .......... .......... .......... .......... .......... 49% 85.3M 1s
 41750K .......... .......... .......... .......... .......... 50% 94.3M 1s
 41800K .......... .......... .......... .......... .......... 50% 89.6M 1s
 41850K .......... .......... .......... .......... .......... 50% 73.7M 1s
 41900K .......... .......... .......... .......... .......... 50% 94.8M 1s
 41950K .......... .......... .......... .......... .......... 50%  110M 1s
 42000K .......... .......... .......... .......... .......... 50% 96.5M 1s
 42050K .......... .......... .......... .......... .......... 50% 81.6M 1s
 42100K .......... .......... .......... .......... .......... 50% 92.2M 1s
 42150K .......... .......... .......... .......... .......... 50% 81.1M 1s
 42200K .......... .......... .......... .......... .......... 50% 86.7M 1s
 42250K .......... .......... .......... .......... .......... 50% 85.5M 1s
 42300K .......... .......... .......... .......... .......... 50% 84.7M 1s
 42350K .......... .......... .......... .......... .......... 50% 92.5M 1s
 42400K .......... .......... .......... .......... .......... 50% 91.8M 1s
 42450K .......... .......... .......... .......... .......... 50% 80.5M 1s
 42500K .......... .......... .......... .......... .......... 50% 93.1M 1s
 42550K .......... .......... .......... .......... .......... 51% 94.3M 1s
 42600K .......... .......... .......... .......... .......... 51%  102M 1s
 42650K .......... .......... .......... .......... .......... 51% 79.4M 1s
 42700K .......... .......... .......... .......... .......... 51% 86.4M 1s
 42750K .......... .......... .......... .......... .......... 51% 94.1M 1s
 42800K .......... .......... .......... .......... .......... 51% 91.4M 1s
 42850K .......... .......... .......... .......... .......... 51% 98.7M 1s
 42900K .......... .......... .......... .......... .......... 51% 90.5M 1s
 42950K .......... .......... .......... .......... .......... 51% 90.8M 1s
 43000K .......... .......... .......... .......... .......... 51% 97.1M 1s
 43050K .......... .......... .......... .......... .......... 51% 75.0M 1s
 43100K .......... .......... .......... .......... .......... 51% 93.6M 1s
 43150K .......... .......... .......... .......... .......... 51% 73.8M 1s
 43200K .......... .......... .......... .......... .......... 51% 91.4M 1s
 43250K .......... .......... .......... .......... .......... 51% 86.8M 1s
 43300K .......... .......... .......... .......... .......... 51% 98.3M 1s
 43350K .......... .......... .......... .......... .......... 51% 83.4M 1s
 43400K .......... .......... .......... .......... .......... 52% 95.0M 1s
 43450K .......... .......... .......... .......... .......... 52% 84.3M 1s
 43500K .......... .......... .......... .......... .......... 52% 95.8M 1s
 43550K .......... .......... .......... .......... .......... 52% 83.4M 1s
 43600K .......... .......... .......... .......... .......... 52% 93.9M 1s
 43650K .......... .......... .......... .......... .......... 52% 85.4M 1s
 43700K .......... .......... .......... .......... .......... 52%  108M 1s
 43750K .......... .......... .......... .......... .......... 52% 90.2M 1s
 43800K .......... .......... .......... .......... .......... 52% 91.8M 1s
 43850K .......... .......... .......... .......... .......... 52% 72.6M 1s
 43900K .......... .......... .......... .......... .......... 52% 97.1M 1s
 43950K .......... .......... .......... .......... .......... 52% 95.6M 1s
 44000K .......... .......... .......... .......... .......... 52% 95.1M 1s
 44050K .......... .......... .......... .......... .......... 52% 78.7M 1s
 44100K .......... .......... .......... .......... .......... 52%  101M 1s
 44150K .......... .......... .......... .......... .......... 52% 92.2M 1s
 44200K .......... .......... .......... .......... .......... 52% 97.1M 1s
 44250K .......... .......... .......... .......... .......... 53% 76.4M 1s
 44300K .......... .......... .......... .......... .......... 53% 93.2M 1s
 44350K .......... .......... .......... .......... .......... 53% 94.4M 1s
 44400K .......... .......... .......... .......... .......... 53% 98.7M 1s
 44450K .......... .......... .......... .......... .......... 53% 82.7M 1s
 44500K .......... .......... .......... .......... .......... 53% 83.9M 1s
 44550K .......... .......... .......... .......... .......... 53% 94.0M 1s
 44600K .......... .......... .......... .......... .......... 53% 95.0M 1s
 44650K .......... .......... .......... .......... .......... 53% 85.1M 1s
 44700K .......... .......... .......... .......... .......... 53% 86.4M 1s
 44750K .......... .......... .......... .......... .......... 53% 89.4M 1s
 44800K .......... .......... .......... .......... .......... 53% 98.3M 1s
 44850K .......... .......... .......... .......... .......... 53% 88.5M 1s
 44900K .......... .......... .......... .......... .......... 53% 97.8M 1s
 44950K .......... .......... .......... .......... .......... 53% 91.9M 1s
 45000K .......... .......... .......... .......... .......... 53% 80.8M 1s
 45050K .......... .......... .......... .......... .......... 53% 84.9M 1s
 45100K .......... .......... .......... .......... .......... 54% 96.3M 1s
 45150K .......... .......... .......... .......... .......... 54% 93.7M 1s
 45200K .......... .......... .......... .......... .......... 54% 99.5M 1s
 45250K .......... .......... .......... .......... .......... 54% 79.0M 1s
 45300K .......... .......... .......... .......... .......... 54% 93.7M 1s
 45350K .......... .......... .......... .......... .......... 54%  100M 1s
 45400K .......... .......... .......... .......... .......... 54% 90.3M 1s
 45450K .......... .......... .......... .......... .......... 54% 75.8M 1s
 45500K .......... .......... .......... .......... .......... 54% 91.4M 1s
 45550K .......... .......... .......... .......... .......... 54% 97.1M 1s
 45600K .......... .......... .......... .......... .......... 54% 96.9M 1s
 45650K .......... .......... .......... .......... .......... 54% 90.2M 1s
 45700K .......... .......... .......... .......... .......... 54% 95.2M 1s
 45750K .......... .......... .......... .......... .......... 54% 85.4M 1s
 45800K .......... .......... .......... .......... .......... 54% 95.5M 1s
 45850K .......... .......... .......... .......... .......... 54% 85.2M 1s
 45900K .......... .......... .......... .......... .......... 55% 93.4M 1s
 45950K .......... .......... .......... .......... .......... 55% 93.7M 1s
 46000K .......... .......... .......... .......... .......... 55% 99.9M 1s
 46050K .......... .......... .......... .......... .......... 55% 79.9M 1s
 46100K .......... .......... .......... .......... .......... 55% 93.0M 1s
 46150K .......... .......... .......... .......... .......... 55% 95.7M 0s
 46200K .......... .......... .......... .......... .......... 55% 92.2M 0s
 46250K .......... .......... .......... .......... .......... 55% 77.9M 0s
 46300K .......... .......... .......... .......... .......... 55% 93.6M 0s
 46350K .......... .......... .......... .......... .......... 55%  104M 0s
 46400K .......... .......... .......... .......... .......... 55% 91.8M 0s
 46450K .......... .......... .......... .......... .......... 55% 88.1M 0s
 46500K .......... .......... .......... .......... .......... 55% 85.3M 0s
 46550K .......... .......... .......... .......... .......... 55% 95.6M 0s
 46600K .......... .......... .......... .......... .......... 55% 95.5M 0s
 46650K .......... .......... .......... .......... .......... 55% 83.6M 0s
 46700K .......... .......... .......... .......... .......... 55% 94.0M 0s
 46750K .......... .......... .......... .......... .......... 56% 87.8M 0s
 46800K .......... .......... .......... .......... .......... 56% 95.3M 0s
 46850K .......... .......... .......... .......... .......... 56% 85.4M 0s
 46900K .......... .......... .......... .......... .......... 56% 95.8M 0s
 46950K .......... .......... .......... .......... .......... 56% 95.4M 0s
 47000K .......... .......... .......... .......... .......... 56%  100M 0s
 47050K .......... .......... .......... .......... .......... 56% 74.2M 0s
 47100K .......... .......... .......... .......... .......... 56% 98.4M 0s
 47150K .......... .......... .......... .......... .......... 56% 95.5M 0s
 47200K .......... .......... .......... .......... .......... 56% 95.0M 0s
 47250K .......... .......... .......... .......... .......... 56% 87.6M 0s
 47300K .......... .......... .......... .......... .......... 56% 89.7M 0s
 47350K .......... .......... .......... .......... .......... 56% 91.9M 0s
 47400K .......... .......... .......... .......... .......... 56% 87.0M 0s
 47450K .......... .......... .......... .......... .......... 56% 84.8M 0s
 47500K .......... .......... .......... .......... .......... 56% 83.5M 0s
 47550K .......... .......... .......... .......... .......... 56% 93.5M 0s
 47600K .......... .......... .......... .......... .......... 57% 92.9M 0s
 47650K .......... .......... .......... .......... .......... 57% 89.7M 0s
 47700K .......... .......... .......... .......... .......... 57% 86.8M 0s
 47750K .......... .......... .......... .......... .......... 57% 90.1M 0s
 47800K .......... .......... .......... .......... .......... 57% 97.9M 0s
 47850K .......... .......... .......... .......... .......... 57% 82.3M 0s
 47900K .......... .......... .......... .......... .......... 57% 80.0M 0s
 47950K .......... .......... .......... .......... .......... 57% 90.8M 0s
 48000K .......... .......... .......... .......... .......... 57% 81.7M 0s
 48050K .......... .......... .......... .......... .......... 57% 80.6M 0s
 48100K .......... .......... .......... .......... .......... 57% 97.3M 0s
 48150K .......... .......... .......... .......... .......... 57% 89.3M 0s
 48200K .......... .......... .......... .......... .......... 57% 95.3M 0s
 48250K .......... .......... .......... .......... .......... 57% 77.9M 0s
 48300K .......... .......... .......... .......... .......... 57% 97.2M 0s
 48350K .......... .......... .......... .......... .......... 57% 91.4M 0s
 48400K .......... .......... .......... .......... .......... 58% 96.1M 0s
 48450K .......... .......... .......... .......... .......... 58% 87.7M 0s
 48500K .......... .......... .......... .......... .......... 58%  102M 0s
 48550K .......... .......... .......... .......... .......... 58%  101M 0s
 48600K .......... .......... .......... .......... .......... 58% 95.2M 0s
 48650K .......... .......... .......... .......... .......... 58% 74.2M 0s
 48700K .......... .......... .......... .......... .......... 58% 92.0M 0s
 48750K .......... .......... .......... .......... .......... 58% 97.6M 0s
 48800K .......... .......... .......... .......... .......... 58%  101M 0s
 48850K .......... .......... .......... .......... .......... 58% 81.0M 0s
 48900K .......... .......... .......... .......... .......... 58% 92.2M 0s
 48950K .......... .......... .......... .......... .......... 58% 95.3M 0s
 49000K .......... .......... .......... .......... .......... 58% 93.2M 0s
 49050K .......... .......... .......... .......... .......... 58% 88.0M 0s
 49100K .......... .......... .......... .......... .......... 58% 84.7M 0s
 49150K .......... .......... .......... .......... .......... 58% 91.6M 0s
 49200K .......... .......... .......... .......... .......... 58% 92.5M 0s
 49250K .......... .......... .......... .......... .......... 59% 88.1M 0s
 49300K .......... .......... .......... .......... .......... 59% 85.2M 0s
 49350K .......... .......... .......... .......... .......... 59% 93.2M 0s
 49400K .......... .......... .......... .......... .......... 59% 95.2M 0s
 49450K .......... .......... .......... .......... .......... 59% 83.8M 0s
 49500K .......... .......... .......... .......... .......... 59% 82.9M 0s
 49550K .......... .......... .......... .......... .......... 59% 92.5M 0s
 49600K .......... .......... .......... .......... .......... 59% 92.6M 0s
 49650K .......... .......... .......... .......... .......... 59% 90.0M 0s
 49700K .......... .......... .......... .......... .......... 59% 96.5M 0s
 49750K .......... .......... .......... .......... .......... 59% 93.1M 0s
 49800K .......... .......... .......... .......... .......... 59% 85.8M 0s
 49850K .......... .......... .......... .......... .......... 59% 77.4M 0s
 49900K .......... .......... .......... .......... .......... 59% 94.5M 0s
 49950K .......... .......... .......... .......... .......... 59% 86.6M 0s
 50000K .......... .......... .......... .......... .......... 59% 93.4M 0s
 50050K .......... .......... .......... .......... .......... 59% 86.2M 0s
 50100K .......... .......... .......... .......... .......... 60% 97.3M 0s
 50150K .......... .......... .......... .......... .......... 60% 95.5M 0s
 50200K .......... .......... .......... .......... .......... 60% 87.4M 0s
 50250K .......... .......... .......... .......... .......... 60% 80.6M 0s
 50300K .......... .......... .......... .......... .......... 60% 99.6M 0s
 50350K .......... .......... .......... .......... .......... 60% 90.8M 0s
 50400K .......... .......... .......... .......... .......... 60% 96.0M 0s
 50450K .......... .......... .......... .......... .......... 60% 79.4M 0s
 50500K .......... .......... .......... .......... .......... 60% 95.0M 0s
 50550K .......... .......... .......... .......... .......... 60%  102M 0s
 50600K .......... .......... .......... .......... .......... 60% 93.2M 0s
 50650K .......... .......... .......... .......... .......... 60% 73.0M 0s
 50700K .......... .......... .......... .......... .......... 60% 97.2M 0s
 50750K .......... .......... .......... .......... .......... 60%  103M 0s
 50800K .......... .......... .......... .......... .......... 60% 94.8M 0s
 50850K .......... .......... .......... .......... .......... 60% 84.4M 0s
 50900K .......... .......... .......... .......... .......... 61% 97.9M 0s
 50950K .......... .......... .......... .......... .......... 61% 94.7M 0s
 51000K .......... .......... .......... .......... .......... 61% 89.5M 0s
 51050K .......... .......... .......... .......... .......... 61% 78.8M 0s
 51100K .......... .......... .......... .......... .......... 61% 96.1M 0s
 51150K .......... .......... .......... .......... .......... 61% 94.5M 0s
 51200K .......... .......... .......... .......... .......... 61% 84.3M 0s
 51250K .......... .......... .......... .......... .......... 61% 90.7M 0s
 51300K .......... .......... .......... .......... .......... 61% 96.1M 0s
 51350K .......... .......... .......... .......... .......... 61% 94.1M 0s
 51400K .......... .......... .......... .......... .......... 61% 97.4M 0s
 51450K .......... .......... .......... .......... .......... 61% 76.1M 0s
 51500K .......... .......... .......... .......... .......... 61% 91.9M 0s
 51550K .......... .......... .......... .......... .......... 61% 91.4M 0s
 51600K .......... .......... .......... .......... .......... 61% 96.2M 0s
 51650K .......... .......... .......... .......... .......... 61% 81.3M 0s
 51700K .......... .......... .......... .......... .......... 61% 91.7M 0s
 51750K .......... .......... .......... .......... .......... 62% 98.1M 0s
 51800K .......... .......... .......... .......... .......... 62% 95.7M 0s
 51850K .......... .......... .......... .......... .......... 62% 70.5M 0s
 51900K .......... .......... .......... .......... .......... 62% 95.2M 0s
 51950K .......... .......... .......... .......... .......... 62% 94.3M 0s
 52000K .......... .......... .......... .......... .......... 62% 95.7M 0s
 52050K .......... .......... .......... .......... .......... 62% 84.1M 0s
 52100K .......... .......... .......... .......... .......... 62% 87.3M 0s
 52150K .......... .......... .......... .......... .......... 62% 91.1M 0s
 52200K .......... .......... .......... .......... .......... 62% 93.3M 0s
 52250K .......... .......... .......... .......... .......... 62% 87.1M 0s
 52300K .......... .......... .......... .......... .......... 62% 83.9M 0s
 52350K .......... .......... .......... .......... .......... 62% 92.8M 0s
 52400K .......... .......... .......... .......... .......... 62% 60.6M 0s
 52450K .......... .......... .......... .......... .......... 62% 72.5M 0s
 52500K .......... .......... .......... .......... .......... 62% 93.6M 0s
 52550K .......... .......... .......... .......... .......... 62% 90.5M 0s
 52600K .......... .......... .......... .......... .......... 63% 95.2M 0s
 52650K .......... .......... .......... .......... .......... 63% 75.7M 0s
 52700K .......... .......... .......... .......... .......... 63% 95.9M 0s
 52750K .......... .......... .......... .......... .......... 63% 90.5M 0s
 52800K .......... .......... .......... .......... .......... 63% 99.1M 0s
 52850K .......... .......... .......... .......... .......... 63% 77.2M 0s
 52900K .......... .......... .......... .......... .......... 63% 95.8M 0s
 52950K .......... .......... .......... .......... .......... 63% 95.1M 0s
 53000K .......... .......... .......... .......... .......... 63% 92.3M 0s
 53050K .......... .......... .......... .......... .......... 63% 77.3M 0s
 53100K .......... .......... .......... .......... .......... 63% 94.3M 0s
 53150K .......... .......... .......... .......... .......... 63% 94.3M 0s
 53200K .......... .......... .......... .......... .......... 63% 95.6M 0s
 53250K .......... .......... .......... .......... .......... 63% 89.0M 0s
 53300K .......... .......... .......... .......... .......... 63% 98.8M 0s
 53350K .......... .......... .......... .......... .......... 63% 95.0M 0s
 53400K .......... .......... .......... .......... .......... 63%  100M 0s
 53450K .......... .......... .......... .......... .......... 64% 72.2M 0s
 53500K .......... .......... .......... .......... .......... 64%  102M 0s
 53550K .......... .......... .......... .......... .......... 64% 92.1M 0s
 53600K .......... .......... .......... .......... .......... 64% 89.8M 0s
 53650K .......... .......... .......... .......... .......... 64% 79.3M 0s
 53700K .......... .......... .......... .......... .......... 64% 94.3M 0s
 53750K .......... .......... .......... .......... .......... 64% 95.7M 0s
 53800K .......... .......... .......... .......... .......... 64% 95.1M 0s
 53850K .......... .......... .......... .......... .......... 64% 86.1M 0s
 53900K .......... .......... .......... .......... .......... 64%  112M 0s
 53950K .......... .......... .......... .......... .......... 64% 58.1M 0s
 54000K .......... .......... .......... .......... .......... 64% 98.6M 0s
 54050K .......... .......... .......... .......... .......... 64% 90.3M 0s
 54100K .......... .......... .......... .......... .......... 64% 89.8M 0s
 54150K .......... .......... .......... .......... .......... 64% 91.9M 0s
 54200K .......... .......... .......... .......... .......... 64% 80.1M 0s
 54250K .......... .......... .......... .......... .......... 65% 82.0M 0s
 54300K .......... .......... .......... .......... .......... 65% 93.3M 0s
 54350K .......... .......... .......... .......... .......... 65% 99.5M 0s
 54400K .......... .......... .......... .......... .......... 65% 85.2M 0s
 54450K .......... .......... .......... .......... .......... 65% 83.4M 0s
 54500K .......... .......... .......... .......... .......... 65%  103M 0s
 54550K .......... .......... .......... .......... .......... 65% 91.7M 0s
 54600K .......... .......... .......... .......... .......... 65% 93.6M 0s
 54650K .......... .......... .......... .......... .......... 65% 71.7M 0s
 54700K .......... .......... .......... .......... .......... 65% 97.4M 0s
 54750K .......... .......... .......... .......... .......... 65% 96.3M 0s
 54800K .......... .......... .......... .......... .......... 65% 84.8M 0s
 54850K .......... .......... .......... .......... .......... 65% 88.1M 0s
 54900K .......... .......... .......... .......... .......... 65%  100M 0s
 54950K .......... .......... .......... .......... .......... 65% 89.0M 0s
 55000K .......... .......... .......... .......... .......... 65% 93.7M 0s
 55050K .......... .......... .......... .......... .......... 65% 75.9M 0s
 55100K .......... .......... .......... .......... .......... 66%  101M 0s
 55150K .......... .......... .......... .......... .......... 66% 92.6M 0s
 55200K .......... .......... .......... .......... .......... 66% 95.4M 0s
 55250K .......... .......... .......... .......... .......... 66% 89.9M 0s
 55300K .......... .......... .......... .......... .......... 66% 98.0M 0s
 55350K .......... .......... .......... .......... .......... 66% 83.3M 0s
 55400K .......... .......... .......... .......... .......... 66% 95.3M 0s
 55450K .......... .......... .......... .......... .......... 66% 91.2M 0s
 55500K .......... .......... .......... .......... .......... 66% 95.0M 0s
 55550K .......... .......... .......... .......... .......... 66% 93.5M 0s
 55600K .......... .......... .......... .......... .......... 66% 95.9M 0s
 55650K .......... .......... .......... .......... .......... 66% 80.9M 0s
 55700K .......... .......... .......... .......... .......... 66% 97.3M 0s
 55750K .......... .......... .......... .......... .......... 66% 95.9M 0s
 55800K .......... .......... .......... .......... .......... 66% 92.4M 0s
 55850K .......... .......... .......... .......... .......... 66% 85.5M 0s
 55900K .......... .......... .......... .......... .......... 66% 90.0M 0s
 55950K .......... .......... .......... .......... .......... 67% 95.1M 0s
 56000K .......... .......... .......... .......... .......... 67% 93.2M 0s
 56050K .......... .......... .......... .......... .......... 67% 87.8M 0s
 56100K .......... .......... .......... .......... .......... 67% 95.3M 0s
 56150K .......... .......... .......... .......... .......... 67% 97.0M 0s
 56200K .......... .......... .......... .......... .......... 67% 93.1M 0s
 56250K .......... .......... .......... .......... .......... 67% 77.2M 0s
 56300K .......... .......... .......... .......... .......... 67% 96.6M 0s
 56350K .......... .......... .......... .......... .......... 67% 92.6M 0s
 56400K .......... .......... .......... .......... .......... 67%  104M 0s
 56450K .......... .......... .......... .......... .......... 67% 76.7M 0s
 56500K .......... .......... .......... .......... .......... 67% 89.3M 0s
 56550K .......... .......... .......... .......... .......... 67% 94.5M 0s
 56600K .......... .......... .......... .......... .......... 67% 75.7M 0s
 56650K .......... .......... .......... .......... .......... 67% 78.3M 0s
 56700K .......... .......... .......... .......... .......... 67% 99.4M 0s
 56750K .......... .......... .......... .......... .......... 68% 79.3M 0s
 56800K .......... .......... .......... .......... .......... 68% 87.3M 0s
 56850K .......... .......... .......... .......... .......... 68% 84.2M 0s
 56900K .......... .......... .......... .......... .......... 68% 86.2M 0s
 56950K .......... .......... .......... .......... .......... 68% 94.2M 0s
 57000K .......... .......... .......... .......... .......... 68% 95.3M 0s
 57050K .......... .......... .......... .......... .......... 68% 68.0M 0s
 57100K .......... .......... .......... .......... .......... 68% 94.3M 0s
 57150K .......... .......... .......... .......... .......... 68% 89.3M 0s
 57200K .......... .......... .......... .......... .......... 68% 94.6M 0s
 57250K .......... .......... .......... .......... .......... 68% 97.7M 0s
 57300K .......... .......... .......... .......... .......... 68% 79.9M 0s
 57350K .......... .......... .......... .......... .......... 68% 89.5M 0s
 57400K .......... .......... .......... .......... .......... 68% 90.6M 0s
 57450K .......... .......... .......... .......... .......... 68% 87.3M 0s
 57500K .......... .......... .......... .......... .......... 68%  106M 0s
 57550K .......... .......... .......... .......... .......... 68% 81.0M 0s
 57600K .......... .......... .......... .......... .......... 69% 92.7M 0s
 57650K .......... .......... .......... .......... .......... 69% 86.1M 0s
 57700K .......... .......... .......... .......... .......... 69% 96.7M 0s
 57750K .......... .......... .......... .......... .......... 69% 83.0M 0s
 57800K .......... .......... .......... .......... .......... 69% 93.3M 0s
 57850K .......... .......... .......... .......... .......... 69% 80.3M 0s
 57900K .......... .......... .......... .......... .......... 69% 83.7M 0s
 57950K .......... .......... .......... .......... .......... 69% 91.5M 0s
 58000K .......... .......... .......... .......... .......... 69% 94.5M 0s
 58050K .......... .......... .......... .......... .......... 69% 88.8M 0s
 58100K .......... .......... .......... .......... .......... 69%  103M 0s
 58150K .......... .......... .......... .......... .......... 69% 86.9M 0s
 58200K .......... .......... .......... .......... .......... 69% 84.3M 0s
 58250K .......... .......... .......... .......... .......... 69% 81.1M 0s
 58300K .......... .......... .......... .......... .......... 69% 94.9M 0s
 58350K .......... .......... .......... .......... .......... 69%  101M 0s
 58400K .......... .......... .......... .......... .......... 69% 79.1M 0s
 58450K .......... .......... .......... .......... .......... 70% 82.3M 0s
 58500K .......... .......... .......... .......... .......... 70%  101M 0s
 58550K .......... .......... .......... .......... .......... 70% 90.3M 0s
 58600K .......... .......... .......... .......... .......... 70% 84.1M 0s
 58650K .......... .......... .......... .......... .......... 70% 78.8M 0s
 58700K .......... .......... .......... .......... .......... 70% 84.4M 0s
 58750K .......... .......... .......... .......... .......... 70% 89.6M 0s
 58800K .......... .......... .......... .......... .......... 70% 92.1M 0s
 58850K .......... .......... .......... .......... .......... 70% 85.8M 0s
 58900K .......... .......... .......... .......... .......... 70% 97.1M 0s
 58950K .......... .......... .......... .......... .......... 70% 93.5M 0s
 59000K .......... .......... .......... .......... .......... 70% 90.5M 0s
 59050K .......... .......... .......... .......... .......... 70% 77.1M 0s
 59100K .......... .......... .......... .......... .......... 70% 80.2M 0s
 59150K .......... .......... .......... .......... .......... 70% 93.9M 0s
 59200K .......... .......... .......... .......... .......... 70% 97.1M 0s
 59250K .......... .......... .......... .......... .......... 71% 81.6M 0s
 59300K .......... .......... .......... .......... .......... 71% 83.7M 0s
 59350K .......... .......... .......... .......... .......... 71% 95.5M 0s
 59400K .......... .......... .......... .......... .......... 71% 92.1M 0s
 59450K .......... .......... .......... .......... .......... 71% 86.4M 0s
 59500K .......... .......... .......... .......... .......... 71% 83.0M 0s
 59550K .......... .......... .......... .......... .......... 71% 95.9M 0s
 59600K .......... .......... .......... .......... .......... 71% 94.6M 0s
 59650K .......... .......... .......... .......... .......... 71% 93.1M 0s
 59700K .......... .......... .......... .......... .......... 71% 91.1M 0s
 59750K .......... .......... .......... .......... .......... 71% 92.4M 0s
 59800K .......... .......... .......... .......... .......... 71% 86.9M 0s
 59850K .......... .......... .......... .......... .......... 71% 78.8M 0s
 59900K .......... .......... .......... .......... .......... 71% 97.8M 0s
 59950K .......... .......... .......... .......... .......... 71% 85.1M 0s
 60000K .......... .......... .......... .......... .......... 71% 92.1M 0s
 60050K .......... .......... .......... .......... .......... 71% 84.7M 0s
 60100K .......... .......... .......... .......... .......... 72% 94.9M 0s
 60150K .......... .......... .......... .......... .......... 72% 98.8M 0s
 60200K .......... .......... .......... .......... .......... 72% 97.1M 0s
 60250K .......... .......... .......... .......... .......... 72% 73.1M 0s
 60300K .......... .......... .......... .......... .......... 72% 92.9M 0s
 60350K .......... .......... .......... .......... .......... 72% 98.8M 0s
 60400K .......... .......... .......... .......... .......... 72% 96.5M 0s
 60450K .......... .......... .......... .......... .......... 72% 80.9M 0s
 60500K .......... .......... .......... .......... .......... 72% 98.1M 0s
 60550K .......... .......... .......... .......... .......... 72% 92.3M 0s
 60600K .......... .......... .......... .......... .......... 72% 91.0M 0s
 60650K .......... .......... .......... .......... .......... 72% 78.8M 0s
 60700K .......... .......... .......... .......... .......... 72% 93.7M 0s
 60750K .......... .......... .......... .......... .......... 72% 91.6M 0s
 60800K .......... .......... .......... .......... .......... 72% 93.5M 0s
 60850K .......... .......... .......... .......... .......... 72% 85.2M 0s
 60900K .......... .......... .......... .......... .......... 72% 87.0M 0s
 60950K .......... .......... .......... .......... .......... 73% 95.0M 0s
 61000K .......... .......... .......... .......... .......... 73% 95.0M 0s
 61050K .......... .......... .......... .......... .......... 73% 80.2M 0s
 61100K .......... .......... .......... .......... .......... 73% 93.0M 0s
 61150K .......... .......... .......... .......... .......... 73%  116M 0s
 61200K .......... .......... .......... .......... .......... 73% 93.4M 0s
 61250K .......... .......... .......... .......... .......... 73% 73.7M 0s
 61300K .......... .......... .......... .......... .......... 73% 92.4M 0s
 61350K .......... .......... .......... .......... .......... 73% 92.9M 0s
 61400K .......... .......... .......... .......... .......... 73% 85.6M 0s
 61450K .......... .......... .......... .......... .......... 73% 81.2M 0s
 61500K .......... .......... .......... .......... .......... 73% 92.7M 0s
 61550K .......... .......... .......... .......... .......... 73% 88.9M 0s
 61600K .......... .......... .......... .......... .......... 73% 94.5M 0s
 61650K .......... .......... .......... .......... .......... 73% 86.5M 0s
 61700K .......... .......... .......... .......... .......... 73% 97.6M 0s
 61750K .......... .......... .......... .......... .......... 73% 93.4M 0s
 61800K .......... .......... .......... .......... .......... 74% 93.7M 0s
 61850K .......... .......... .......... .......... .......... 74% 78.5M 0s
 61900K .......... .......... .......... .......... .......... 74% 91.7M 0s
 61950K .......... .......... .......... .......... .......... 74% 99.8M 0s
 62000K .......... .......... .......... .......... .......... 74%  110M 0s
 62050K .......... .......... .......... .......... .......... 74% 85.0M 0s
 62100K .......... .......... .......... .......... .......... 74% 91.7M 0s
 62150K .......... .......... .......... .......... .......... 74% 98.1M 0s
 62200K .......... .......... .......... .......... .......... 74% 84.7M 0s
 62250K .......... .......... .......... .......... .......... 74% 81.4M 0s
 62300K .......... .......... .......... .......... .......... 74% 95.1M 0s
 62350K .......... .......... .......... .......... .......... 74% 95.3M 0s
 62400K .......... .......... .......... .......... .......... 74% 88.1M 0s
 62450K .......... .......... .......... .......... .......... 74% 87.2M 0s
 62500K .......... .......... .......... .......... .......... 74% 94.3M 0s
 62550K .......... .......... .......... .......... .......... 74% 93.5M 0s
 62600K .......... .......... .......... .......... .......... 75% 98.4M 0s
 62650K .......... .......... .......... .......... .......... 75% 74.2M 0s
 62700K .......... .......... .......... .......... .......... 75% 97.9M 0s
 62750K .......... .......... .......... .......... .......... 75% 96.8M 0s
 62800K .......... .......... .......... .......... .......... 75% 91.9M 0s
 62850K .......... .......... .......... .......... .......... 75% 87.1M 0s
 62900K .......... .......... .......... .......... .......... 75% 85.6M 0s
 62950K .......... .......... .......... .......... .......... 75% 94.4M 0s
 63000K .......... .......... .......... .......... .......... 75% 99.8M 0s
 63050K .......... .......... .......... .......... .......... 75% 81.4M 0s
 63100K .......... .......... .......... .......... .......... 75% 94.4M 0s
 63150K .......... .......... .......... .......... .......... 75% 88.3M 0s
 63200K .......... .......... .......... .......... .......... 75% 96.8M 0s
 63250K .......... .......... .......... .......... .......... 75% 86.1M 0s
 63300K .......... .......... .......... .......... .......... 75% 97.1M 0s
 63350K .......... .......... .......... .......... .......... 75% 97.9M 0s
 63400K .......... .......... .......... .......... .......... 75% 94.8M 0s
 63450K .......... .......... .......... .......... .......... 76% 78.9M 0s
 63500K .......... .......... .......... .......... .......... 76% 94.4M 0s
 63550K .......... .......... .......... .......... .......... 76% 95.3M 0s
 63600K .......... .......... .......... .......... .......... 76% 99.8M 0s
 63650K .......... .......... .......... .......... .......... 76% 94.1M 0s
 63700K .......... .......... .......... .......... .......... 76% 94.6M 0s
 63750K .......... .......... .......... .......... .......... 76%  102M 0s
 63800K .......... .......... .......... .......... .......... 76% 93.7M 0s
 63850K .......... .......... .......... .......... .......... 76% 76.6M 0s
 63900K .......... .......... .......... .......... .......... 76% 94.9M 0s
 63950K .......... .......... .......... .......... .......... 76% 91.4M 0s
 64000K .......... .......... .......... .......... .......... 76% 95.0M 0s
 64050K .......... .......... .......... .......... .......... 76% 78.1M 0s
 64100K .......... .......... .......... .......... .......... 76% 97.3M 0s
 64150K .......... .......... .......... .......... .......... 76%  104M 0s
 64200K .......... .......... .......... .......... .......... 76% 96.0M 0s
 64250K .......... .......... .......... .......... .......... 76% 82.7M 0s
 64300K .......... .......... .......... .......... .......... 77%  102M 0s
 64350K .......... .......... .......... .......... .......... 77% 98.0M 0s
 64400K .......... .......... .......... .......... .......... 77% 92.5M 0s
 64450K .......... .......... .......... .......... .......... 77% 77.3M 0s
 64500K .......... .......... .......... .......... .......... 77% 92.1M 0s
 64550K .......... .......... .......... .......... .......... 77% 94.4M 0s
 64600K .......... .......... .......... .......... .......... 77% 94.5M 0s
 64650K .......... .......... .......... .......... .......... 77% 75.6M 0s
 64700K .......... .......... .......... .......... .......... 77%  101M 0s
 64750K .......... .......... .......... .......... .......... 77% 95.0M 0s
 64800K .......... .......... .......... .......... .......... 77% 98.0M 0s
 64850K .......... .......... .......... .......... .......... 77% 89.7M 0s
 64900K .......... .......... .......... .......... .......... 77% 87.2M 0s
 64950K .......... .......... .......... .......... .......... 77% 92.7M 0s
 65000K .......... .......... .......... .......... .......... 77% 97.9M 0s
 65050K .......... .......... .......... .......... .......... 77% 80.6M 0s
 65100K .......... .......... .......... .......... .......... 78% 96.7M 0s
 65150K .......... .......... .......... .......... .......... 78% 94.8M 0s
 65200K .......... .......... .......... .......... .......... 78% 84.4M 0s
 65250K .......... .......... .......... .......... .......... 78% 87.9M 0s
 65300K .......... .......... .......... .......... .......... 78% 96.1M 0s
 65350K .......... .......... .......... .......... .......... 78% 96.4M 0s
 65400K .......... .......... .......... .......... .......... 78%  103M 0s
 65450K .......... .......... .......... .......... .......... 78% 77.4M 0s
 65500K .......... .......... .......... .......... .......... 78% 92.0M 0s
 65550K .......... .......... .......... .......... .......... 78% 94.5M 0s
 65600K .......... .......... .......... .......... .......... 78% 98.0M 0s
 65650K .......... .......... .......... .......... .......... 78% 88.7M 0s
 65700K .......... .......... .......... .......... .......... 78% 97.6M 0s
 65750K .......... .......... .......... .......... .......... 78% 95.1M 0s
 65800K .......... .......... .......... .......... .......... 78% 78.2M 0s
 65850K .......... .......... .......... .......... .......... 78% 80.5M 0s
 65900K .......... .......... .......... .......... .......... 78% 89.7M 0s
 65950K .......... .......... .......... .......... .......... 79% 89.3M 0s
 66000K .......... .......... .......... .......... .......... 79% 97.9M 0s
 66050K .......... .......... .......... .......... .......... 79% 92.3M 0s
 66100K .......... .......... .......... .......... .......... 79% 90.2M 0s
 66150K .......... .......... .......... .......... .......... 79% 97.7M 0s
 66200K .......... .......... .......... .......... .......... 79% 96.6M 0s
 66250K .......... .......... .......... .......... .......... 79% 73.3M 0s
 66300K .......... .......... .......... .......... .......... 79% 95.0M 0s
 66350K .......... .......... .......... .......... .......... 79% 93.2M 0s
 66400K .......... .......... .......... .......... .......... 79%  100M 0s
 66450K .......... .......... .......... .......... .......... 79% 77.6M 0s
 66500K .......... .......... .......... .......... .......... 79% 95.9M 0s
 66550K .......... .......... .......... .......... .......... 79%  101M 0s
 66600K .......... .......... .......... .......... .......... 79% 96.7M 0s
 66650K .......... .......... .......... .......... .......... 79% 72.7M 0s
 66700K .......... .......... .......... .......... .......... 79% 97.7M 0s
 66750K .......... .......... .......... .......... .......... 79%  102M 0s
 66800K .......... .......... .......... .......... .......... 80% 91.3M 0s
 66850K .......... .......... .......... .......... .......... 80% 90.9M 0s
 66900K .......... .......... .......... .......... .......... 80% 93.9M 0s
 66950K .......... .......... .......... .......... .......... 80% 95.4M 0s
 67000K .......... .......... .......... .......... .......... 80% 96.0M 0s
 67050K .......... .......... .......... .......... .......... 80% 74.2M 0s
 67100K .......... .......... .......... .......... .......... 80% 94.9M 0s
 67150K .......... .......... .......... .......... .......... 80% 97.7M 0s
 67200K .......... .......... .......... .......... .......... 80% 99.3M 0s
 67250K .......... .......... .......... .......... .......... 80% 79.3M 0s
 67300K .......... .......... .......... .......... .......... 80% 96.0M 0s
 67350K .......... .......... .......... .......... .......... 80% 98.6M 0s
 67400K .......... .......... .......... .......... .......... 80%  103M 0s
 67450K .......... .......... .......... .......... .......... 80%  103M 0s
 67500K .......... .......... .......... .......... .......... 80%  103M 0s
 67550K .......... .......... .......... .......... .......... 80% 90.4M 0s
 67600K .......... .......... .......... .......... .......... 80% 91.2M 0s
 67650K .......... .......... .......... .......... .......... 81% 79.3M 0s
 67700K .......... .......... .......... .......... .......... 81% 93.7M 0s
 67750K .......... .......... .......... .......... .......... 81% 98.9M 0s
 67800K .......... .......... .......... .......... .......... 81% 91.2M 0s
 67850K .......... .......... .......... .......... .......... 81%  108M 0s
 67900K .......... .......... .......... .......... .......... 81%  100M 0s
 67950K .......... .......... .......... .......... .......... 81% 94.7M 0s
 68000K .......... .......... .......... .......... .......... 81% 97.4M 0s
 68050K .......... .......... .......... .......... .......... 81% 76.1M 0s
 68100K .......... .......... .......... .......... .......... 81% 89.4M 0s
 68150K .......... .......... .......... .......... .......... 81% 88.8M 0s
 68200K .......... .......... .......... .......... .......... 81% 81.5M 0s
 68250K .......... .......... .......... .......... .......... 81% 77.7M 0s
 68300K .......... .......... .......... .......... .......... 81% 81.8M 0s
 68350K .......... .......... .......... .......... .......... 81%  107M 0s
 68400K .......... .......... .......... .......... .......... 81%  112M 0s
 68450K .......... .......... .......... .......... .......... 82% 73.1M 0s
 68500K .......... .......... .......... .......... .......... 82% 87.8M 0s
 68550K .......... .......... .......... .......... .......... 82% 78.6M 0s
 68600K .......... .......... .......... .......... .......... 82% 89.1M 0s
 68650K .......... .......... .......... .......... .......... 82% 70.6M 0s
 68700K .......... .......... .......... .......... .......... 82%  120M 0s
 68750K .......... .......... .......... .......... .......... 82% 95.1M 0s
 68800K .......... .......... .......... .......... .......... 82% 88.3M 0s
 68850K .......... .......... .......... .......... .......... 82% 83.2M 0s
 68900K .......... .......... .......... .......... .......... 82% 81.3M 0s
 68950K .......... .......... .......... .......... .......... 82% 89.9M 0s
 69000K .......... .......... .......... .......... .......... 82% 87.5M 0s
 69050K .......... .......... .......... .......... .......... 82% 70.2M 0s
 69100K .......... .......... .......... .......... .......... 82% 93.0M 0s
 69150K .......... .......... .......... .......... .......... 82% 98.6M 0s
 69200K .......... .......... .......... .......... .......... 82% 93.2M 0s
 69250K .......... .......... .......... .......... .......... 82% 78.3M 0s
 69300K .......... .......... .......... .......... .......... 83% 88.9M 0s
 69350K .......... .......... .......... .......... .......... 83% 96.2M 0s
 69400K .......... .......... .......... .......... .......... 83% 98.2M 0s
 69450K .......... .......... .......... .......... .......... 83% 75.4M 0s
 69500K .......... .......... .......... .......... .......... 83% 91.2M 0s
 69550K .......... .......... .......... .......... .......... 83%  120M 0s
 69600K .......... .......... .......... .......... .......... 83%  123M 0s
 69650K .......... .......... .......... .......... .......... 83% 72.0M 0s
 69700K .......... .......... .......... .......... .......... 83% 91.7M 0s
 69750K .......... .......... .......... .......... .......... 83% 81.7M 0s
 69800K .......... .......... .......... .......... .......... 83% 92.6M 0s
 69850K .......... .......... .......... .......... .......... 83% 80.7M 0s
 69900K .......... .......... .......... .......... .......... 83% 81.4M 0s
 69950K .......... .......... .......... .......... .......... 83%  105M 0s
 70000K .......... .......... .......... .......... .......... 83% 94.1M 0s
 70050K .......... .......... .......... .......... .......... 83% 82.8M 0s
 70100K .......... .......... .......... .......... .......... 83% 91.6M 0s
 70150K .......... .......... .......... .......... .......... 84% 86.3M 0s
 70200K .......... .......... .......... .......... .......... 84% 93.2M 0s
 70250K .......... .......... .......... .......... .......... 84% 80.7M 0s
 70300K .......... .......... .......... .......... .......... 84% 95.3M 0s
 70350K .......... .......... .......... .......... .......... 84% 78.5M 0s
 70400K .......... .......... .......... .......... .......... 84% 99.9M 0s
 70450K .......... .......... .......... .......... .......... 84%  106M 0s
 70500K .......... .......... .......... .......... .......... 84% 90.5M 0s
 70550K .......... .......... .......... .......... .......... 84% 90.8M 0s
 70600K .......... .......... .......... .......... .......... 84% 94.8M 0s
 70650K .......... .......... .......... .......... .......... 84% 74.4M 0s
 70700K .......... .......... .......... .......... .......... 84% 95.4M 0s
 70750K .......... .......... .......... .......... .......... 84% 94.3M 0s
 70800K .......... .......... .......... .......... .......... 84% 91.8M 0s
 70850K .......... .......... .......... .......... .......... 84% 81.7M 0s
 70900K .......... .......... .......... .......... .......... 84% 92.5M 0s
 70950K .......... .......... .......... .......... .......... 85% 96.8M 0s
 71000K .......... .......... .......... .......... .......... 85% 94.6M 0s
 71050K .......... .......... .......... .......... .......... 85% 74.4M 0s
 71100K .......... .......... .......... .......... .......... 85% 94.0M 0s
 71150K .......... .......... .......... .......... .......... 85% 91.4M 0s
 71200K .......... .......... .......... .......... .......... 85% 94.3M 0s
 71250K .......... .......... .......... .......... .......... 85% 77.4M 0s
 71300K .......... .......... .......... .......... .......... 85%  112M 0s
 71350K .......... .......... .......... .......... .......... 85%  111M 0s
 71400K .......... .......... .......... .......... .......... 85% 79.3M 0s
 71450K .......... .......... .......... .......... .......... 85% 80.6M 0s
 71500K .......... .......... .......... .......... .......... 85% 82.2M 0s
 71550K .......... .......... .......... .......... .......... 85% 92.4M 0s
 71600K .......... .......... .......... .......... .......... 85% 92.8M 0s
 71650K .......... .......... .......... .......... .......... 85% 75.2M 0s
 71700K .......... .......... .......... .......... .......... 85% 86.3M 0s
 71750K .......... .......... .......... .......... .......... 85% 89.1M 0s
 71800K .......... .......... .......... .......... .......... 86% 85.1M 0s
 71850K .......... .......... .......... .......... .......... 86% 80.7M 0s
 71900K .......... .......... .......... .......... .......... 86% 90.8M 0s
 71950K .......... .......... .......... .......... .......... 86% 84.1M 0s
 72000K .......... .......... .......... .......... .......... 86% 89.5M 0s
 72050K .......... .......... .......... .......... .......... 86% 88.3M 0s
 72100K .......... .......... .......... .......... .......... 86% 99.1M 0s
 72150K .......... .......... .......... .......... .......... 86%  102M 0s
 72200K .......... .......... .......... .......... .......... 86%  106M 0s
 72250K .......... .......... .......... .......... .......... 86% 83.3M 0s
 72300K .......... .......... .......... .......... .......... 86% 84.4M 0s
 72350K .......... .......... .......... .......... .......... 86%  100M 0s
 72400K .......... .......... .......... .......... .......... 86%  136M 0s
 72450K .......... .......... .......... .......... .......... 86%  118M 0s
 72500K .......... .......... .......... .......... .......... 86% 93.3M 0s
 72550K .......... .......... .......... .......... .......... 86% 96.8M 0s
 72600K .......... .......... .......... .......... .......... 86% 98.5M 0s
 72650K .......... .......... .......... .......... .......... 87% 75.6M 0s
 72700K .......... .......... .......... .......... .......... 87%  101M 0s
 72750K .......... .......... .......... .......... .......... 87% 94.9M 0s
 72800K .......... .......... .......... .......... .......... 87%  105M 0s
 72850K .......... .......... .......... .......... .......... 87% 92.6M 0s
 72900K .......... .......... .......... .......... .......... 87%  103M 0s
 72950K .......... .......... .......... .......... .......... 87%  106M 0s
 73000K .......... .......... .......... .......... .......... 87%  102M 0s
 73050K .......... .......... .......... .......... .......... 87% 87.6M 0s
 73100K .......... .......... .......... .......... .......... 87%  101M 0s
 73150K .......... .......... .......... .......... .......... 87% 97.7M 0s
 73200K .......... .......... .......... .......... .......... 87%  103M 0s
 73250K .......... .......... .......... .......... .......... 87% 94.7M 0s
 73300K .......... .......... .......... .......... .......... 87%  108M 0s
 73350K .......... .......... .......... .......... .......... 87%  138M 0s
 73400K .......... .......... .......... .......... .......... 87%  112M 0s
 73450K .......... .......... .......... .......... .......... 88% 84.8M 0s
 73500K .......... .......... .......... .......... .......... 88% 97.4M 0s
 73550K .......... .......... .......... .......... .......... 88% 99.2M 0s
 73600K .......... .......... .......... .......... .......... 88% 97.1M 0s
 73650K .......... .......... .......... .......... .......... 88% 92.5M 0s
 73700K .......... .......... .......... .......... .......... 88% 98.1M 0s
 73750K .......... .......... .......... .......... .......... 88% 98.8M 0s
 73800K .......... .......... .......... .......... .......... 88% 99.1M 0s
 73850K .......... .......... .......... .......... .......... 88% 76.6M 0s
 73900K .......... .......... .......... .......... .......... 88% 98.7M 0s
 73950K .......... .......... .......... .......... .......... 88% 98.6M 0s
 74000K .......... .......... .......... .......... .......... 88% 98.5M 0s
 74050K .......... .......... .......... .......... .......... 88% 88.8M 0s
 74100K .......... .......... .......... .......... .......... 88% 99.3M 0s
 74150K .......... .......... .......... .......... .......... 88%  101M 0s
 74200K .......... .......... .......... .......... .......... 88%  101M 0s
 74250K .......... .......... .......... .......... .......... 88% 85.8M 0s
 74300K .......... .......... .......... .......... .......... 89%  136M 0s
 74350K .......... .......... .......... .......... .......... 89%  103M 0s
 74400K .......... .......... .......... .......... .......... 89% 98.3M 0s
 74450K .......... .......... .......... .......... .......... 89% 91.5M 0s
 74500K .......... .......... .......... .......... .......... 89% 96.5M 0s
 74550K .......... .......... .......... .......... .......... 89% 98.8M 0s
 74600K .......... .......... .......... .......... .......... 89% 96.2M 0s
 74650K .......... .......... .......... .......... .......... 89% 76.3M 0s
 74700K .......... .......... .......... .......... .......... 89%  101M 0s
 74750K .......... .......... .......... .......... .......... 89% 97.7M 0s
 74800K .......... .......... .......... .......... .......... 89% 99.5M 0s
 74850K .......... .......... .......... .......... .......... 89% 94.1M 0s
 74900K .......... .......... .......... .......... .......... 89%  103M 0s
 74950K .......... .......... .......... .......... .......... 89%  102M 0s
 75000K .......... .......... .......... .......... .......... 89%  101M 0s
 75050K .......... .......... .......... .......... .......... 89% 91.3M 0s
 75100K .......... .......... .......... .......... .......... 89% 98.5M 0s
 75150K .......... .......... .......... .......... .......... 90%  103M 0s
 75200K .......... .......... .......... .......... .......... 90%  100M 0s
 75250K .......... .......... .......... .......... .......... 90% 87.3M 0s
 75300K .......... .......... .......... .......... .......... 90% 83.2M 0s
 75350K .......... .......... .......... .......... .......... 90% 97.2M 0s
 75400K .......... .......... .......... .......... .......... 90% 93.2M 0s
 75450K .......... .......... .......... .......... .......... 90% 50.2M 0s
 75500K .......... .......... .......... .......... .......... 90%  103M 0s
 75550K .......... .......... .......... .......... .......... 90%  101M 0s
 75600K .......... .......... .......... .......... .......... 90% 94.8M 0s
 75650K .......... .......... .......... .......... .......... 90% 94.4M 0s
 75700K .......... .......... .......... .......... .......... 90% 99.2M 0s
 75750K .......... .......... .......... .......... .......... 90%  100M 0s
 75800K .......... .......... .......... .......... .......... 90%  106M 0s
 75850K .......... .......... .......... .......... .......... 90% 85.7M 0s
 75900K .......... .......... .......... .......... .......... 90% 98.3M 0s
 75950K .......... .......... .......... .......... .......... 90% 98.7M 0s
 76000K .......... .......... .......... .......... .......... 91% 99.3M 0s
 76050K .......... .......... .......... .......... .......... 91% 98.5M 0s
 76100K .......... .......... .......... .......... .......... 91% 97.0M 0s
 76150K .......... .......... .......... .......... .......... 91%  101M 0s
 76200K .......... .......... .......... .......... .......... 91%  113M 0s
 76250K .......... .......... .......... .......... .......... 91% 89.3M 0s
 76300K .......... .......... .......... .......... .......... 91% 98.3M 0s
 76350K .......... .......... .......... .......... .......... 91%  104M 0s
 76400K .......... .......... .......... .......... .......... 91%  108M 0s
 76450K .......... .......... .......... .......... .......... 91% 97.7M 0s
 76500K .......... .......... .......... .......... .......... 91%  103M 0s
 76550K .......... .......... .......... .......... .......... 91% 99.5M 0s
 76600K .......... .......... .......... .......... .......... 91%  104M 0s
 76650K .......... .......... .......... .......... .......... 91% 88.4M 0s
 76700K .......... .......... .......... .......... .......... 91% 98.8M 0s
 76750K .......... .......... .......... .......... .......... 91%  103M 0s
 76800K .......... .......... .......... .......... .......... 92% 98.7M 0s
 76850K .......... .......... .......... .......... .......... 92% 93.8M 0s
 76900K .......... .......... .......... .......... .......... 92%  102M 0s
 76950K .......... .......... .......... .......... .......... 92% 99.6M 0s
 77000K .......... .......... .......... .......... .......... 92%  102M 0s
 77050K .......... .......... .......... .......... .......... 92% 80.8M 0s
 77100K .......... .......... .......... .......... .......... 92% 99.8M 0s
 77150K .......... .......... .......... .......... .......... 92%  136M 0s
 77200K .......... .......... .......... .......... .......... 92% 98.7M 0s
 77250K .......... .......... .......... .......... .......... 92% 90.3M 0s
 77300K .......... .......... .......... .......... .......... 92% 86.2M 0s
 77350K .......... .......... .......... .......... .......... 92% 97.6M 0s
 77400K .......... .......... .......... .......... .......... 92%  101M 0s
 77450K .......... .......... .......... .......... .......... 92% 84.4M 0s
 77500K .......... .......... .......... .......... .......... 92% 99.8M 0s
 77550K .......... .......... .......... .......... .......... 92%  102M 0s
 77600K .......... .......... .......... .......... .......... 92% 96.8M 0s
 77650K .......... .......... .......... .......... .......... 93% 94.7M 0s
 77700K .......... .......... .......... .......... .......... 93%  107M 0s
 77750K .......... .......... .......... .......... .......... 93% 97.7M 0s
 77800K .......... .......... .......... .......... .......... 93% 98.6M 0s
 77850K .......... .......... .......... .......... .......... 93% 87.7M 0s
 77900K .......... .......... .......... .......... .......... 93%  102M 0s
 77950K .......... .......... .......... .......... .......... 93%  101M 0s
 78000K .......... .......... .......... .......... .......... 93%  100M 0s
 78050K .......... .......... .......... .......... .......... 93% 84.2M 0s
 78100K .......... .......... .......... .......... .......... 93%  120M 0s
 78150K .......... .......... .......... .......... .......... 93% 97.9M 0s
 78200K .......... .......... .......... .......... .......... 93% 98.1M 0s
 78250K .......... .......... .......... .......... .......... 93% 76.1M 0s
 78300K .......... .......... .......... .......... .......... 93%  103M 0s
 78350K .......... .......... .......... .......... .......... 93%  101M 0s
 78400K .......... .......... .......... .......... .......... 93%  102M 0s
 78450K .......... .......... .......... .......... .......... 93% 94.5M 0s
 78500K .......... .......... .......... .......... .......... 94% 99.0M 0s
 78550K .......... .......... .......... .......... .......... 94%  102M 0s
 78600K .......... .......... .......... .......... .......... 94%  101M 0s
 78650K .......... .......... .......... .......... .......... 94% 86.2M 0s
 78700K .......... .......... .......... .......... .......... 94%  101M 0s
 78750K .......... .......... .......... .......... .......... 94%  100M 0s
 78800K .......... .......... .......... .......... .......... 94% 98.8M 0s
 78850K .......... .......... .......... .......... .......... 94% 94.6M 0s
 78900K .......... .......... .......... .......... .......... 94%  101M 0s
 78950K .......... .......... .......... .......... .......... 94% 85.1M 0s
 79000K .......... .......... .......... .......... .......... 94%  117M 0s
 79050K .......... .......... .......... .......... .......... 94% 78.6M 0s
 79100K .......... .......... .......... .......... .......... 94% 97.1M 0s
 79150K .......... .......... .......... .......... .......... 94%  100M 0s
 79200K .......... .......... .......... .......... .......... 94%  105M 0s
 79250K .......... .......... .......... .......... .......... 94% 93.4M 0s
 79300K .......... .......... .......... .......... .......... 95% 95.0M 0s
 79350K .......... .......... .......... .......... .......... 95%  105M 0s
 79400K .......... .......... .......... .......... .......... 95% 98.7M 0s
 79450K .......... .......... .......... .......... .......... 95% 88.7M 0s
 79500K .......... .......... .......... .......... .......... 95% 96.2M 0s
 79550K .......... .......... .......... .......... .......... 95% 97.7M 0s
 79600K .......... .......... .......... .......... .......... 95% 99.5M 0s
 79650K .......... .......... .......... .......... .......... 95% 98.3M 0s
 79700K .......... .......... .......... .......... .......... 95% 99.1M 0s
 79750K .......... .......... .......... .......... .......... 95% 90.5M 0s
 79800K .......... .......... .......... .......... .......... 95% 95.8M 0s
 79850K .......... .......... .......... .......... .......... 95% 85.5M 0s
 79900K .......... .......... .......... .......... .......... 95%  101M 0s
 79950K .......... .......... .......... .......... .......... 95%  101M 0s
 80000K .......... .......... .......... .......... .......... 95% 99.6M 0s
 80050K .......... .......... .......... .......... .......... 95% 91.9M 0s
 80100K .......... .......... .......... .......... .......... 95% 96.4M 0s
 80150K .......... .......... .......... .......... .......... 96%  104M 0s
 80200K .......... .......... .......... .......... .......... 96% 96.9M 0s
 80250K .......... .......... .......... .......... .......... 96% 78.9M 0s
 80300K .......... .......... .......... .......... .......... 96%  100M 0s
 80350K .......... .......... .......... .......... .......... 96%  119M 0s
 80400K .......... .......... .......... .......... .......... 96% 99.8M 0s
 80450K .......... .......... .......... .......... .......... 96% 79.8M 0s
 80500K .......... .......... .......... .......... .......... 96% 98.9M 0s
 80550K .......... .......... .......... .......... .......... 96%  103M 0s
 80600K .......... .......... .......... .......... .......... 96% 93.3M 0s
 80650K .......... .......... .......... .......... .......... 96% 86.0M 0s
 80700K .......... .......... .......... .......... .......... 96%  101M 0s
 80750K .......... .......... .......... .......... .......... 96%  103M 0s
 80800K .......... .......... .......... .......... .......... 96% 98.6M 0s
 80850K .......... .......... .......... .......... .......... 96% 90.3M 0s
 80900K .......... .......... .......... .......... .......... 96%  104M 0s
 80950K .......... .......... .......... .......... .......... 96%  102M 0s
 81000K .......... .......... .......... .......... .......... 97%  101M 0s
 81050K .......... .......... .......... .......... .......... 97% 76.6M 0s
 81100K .......... .......... .......... .......... .......... 97%  102M 0s
 81150K .......... .......... .......... .......... .......... 97%  101M 0s
 81200K .......... .......... .......... .......... .......... 97% 98.9M 0s
 81250K .......... .......... .......... .......... .......... 97% 92.7M 0s
 81300K .......... .......... .......... .......... .......... 97%  101M 0s
 81350K .......... .......... .......... .......... .......... 97% 98.8M 0s
 81400K .......... .......... .......... .......... .......... 97% 98.0M 0s
 81450K .......... .......... .......... .......... .......... 97% 86.7M 0s
 81500K .......... .......... .......... .......... .......... 97%  100M 0s
 81550K .......... .......... .......... .......... .......... 97%  101M 0s
 81600K .......... .......... .......... .......... .......... 97% 98.6M 0s
 81650K .......... .......... .......... .......... .......... 97% 83.8M 0s
 81700K .......... .......... .......... .......... .......... 97% 99.7M 0s
 81750K .......... .......... .......... .......... .......... 97%  101M 0s
 81800K .......... .......... .......... .......... .......... 98% 96.7M 0s
 81850K .......... .......... .......... .......... .......... 98% 88.3M 0s
 81900K .......... .......... .......... .......... .......... 98% 95.7M 0s
 81950K .......... .......... .......... .......... .......... 98% 96.3M 0s
 82000K .......... .......... .......... .......... .......... 98% 96.2M 0s
 82050K .......... .......... .......... .......... .......... 98% 89.9M 0s
 82100K .......... .......... .......... .......... .......... 98%  115M 0s
 82150K .......... .......... .......... .......... .......... 98%  137M 0s
 82200K .......... .......... .......... .......... .......... 98%  138M 0s
 82250K .......... .......... .......... .......... .......... 98%  115M 0s
 82300K .......... .......... .......... .......... .......... 98%  131M 0s
 82350K .......... .......... .......... .......... .......... 98%  135M 0s
 82400K .......... .......... .......... .......... .......... 98%  134M 0s
 82450K .......... .......... .......... .......... .......... 98%  119M 0s
 82500K .......... .......... .......... .......... .......... 98%  135M 0s
 82550K .......... .......... .......... .......... .......... 98%  131M 0s
 82600K .......... .......... .......... .......... .......... 98%  133M 0s
 82650K .......... .......... .......... .......... .......... 99%  110M 0s
 82700K .......... .......... .......... .......... .......... 99%  124M 0s
 82750K .......... .......... .......... .......... .......... 99%  125M 0s
 82800K .......... .......... .......... .......... .......... 99%  128M 0s
 82850K .......... .......... .......... .......... .......... 99%  120M 0s
 82900K .......... .......... .......... .......... .......... 99%  134M 0s
 82950K .......... .......... .......... .......... .......... 99%  132M 0s
 83000K .......... .......... .......... .......... .......... 99%  131M 0s
 83050K .......... .......... .......... .......... .......... 99%  108M 0s
 83100K .......... .......... .......... .......... .......... 99%  131M 0s
 83150K .......... .......... .......... .......... .......... 99%  131M 0s
 83200K .......... .......... .......... .......... .......... 99%  130M 0s
 83250K .......... .......... .......... .......... .......... 99%  117M 0s
 83300K .......... .......... .......... .......... .......... 99%  130M 0s
 83350K .......... .......... .......... .......... .......... 99%  126M 0s
 83400K .......... .......... .......... .......... .......... 99%  132M 0s
 83450K .......... .......... .......... .......... .......... 99%  105M 0s
 83500K .......... .........                                  100%  169M=1.0s

2015-11-16 19:47:19 (80.5 MB/s) - ‘linux-4.2.3.tar.xz’ saved [85523884/85523884]

Cloning into 'busybox'...
Switched to a new branch '1_24_stable'
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:188:28: note: in expansion of macro ‘G’
  char BUG_G_too_big[sizeof(G) <= COMMON_BUFSIZE ? 1 : -1];
                            ^
procps/top.c: In function ‘mult_lvl_cmp’:
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:197:27: note: in expansion of macro ‘G’
 #define sort_function    (G.sort_function     )
                           ^
procps/top.c:257:15: note: in expansion of macro ‘sort_function’
   cmp_val = (*sort_function[i])(a, b);
               ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:194:27: note: in expansion of macro ‘G’
 #define inverted         (G.inverted          )
                           ^
procps/top.c:261:9: note: in expansion of macro ‘inverted’
  return inverted ? -cmp_val : cmp_val;
         ^
In file included from procps/top.c:107:0:
procps/top.c: In function ‘read_cpu_jiffy’:
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
include/libbb.h:194:45: note: in definition of macro ‘fgets’
 # define fgets(s, n, stream) fgets_unlocked(s, n, stream)
                                             ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:273:13: note: in expansion of macro ‘line_buf’
  if (!fgets(line_buf, LINE_BUF_SIZE, fp) || line_buf[0] != 'c' /* not "cpu" */)
             ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:273:45: note: in expansion of macro ‘line_buf’
  if (!fgets(line_buf, LINE_BUF_SIZE, fp) || line_buf[0] != 'c' /* not "cpu" */)
                                             ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:275:15: note: in expansion of macro ‘line_buf’
  ret = sscanf(line_buf, fmt,
               ^
procps/top.c: In function ‘get_jiffy_counts’:
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:201:27: note: in expansion of macro ‘G’
 #define prev_jif         (G.prev_jif          )
                           ^
procps/top.c:295:2: note: in expansion of macro ‘prev_jif’
  prev_jif = cur_jif;
  ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:200:27: note: in expansion of macro ‘G’
 #define cur_jif          (G.cur_jif           )
                           ^
procps/top.c:295:13: note: in expansion of macro ‘cur_jif’
  prev_jif = cur_jif;
             ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:200:27: note: in expansion of macro ‘G’
 #define cur_jif          (G.cur_jif           )
                           ^
procps/top.c:296:26: note: in expansion of macro ‘cur_jif’
  if (read_cpu_jiffy(fp, &cur_jif) < 4)
                          ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:195:27: note: in expansion of macro ‘G’
 #define smp_cpu_info     (G.smp_cpu_info      )
                           ^
procps/top.c:303:7: note: in expansion of macro ‘smp_cpu_info’
  if (!smp_cpu_info) {
       ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:204:27: note: in expansion of macro ‘G’
 #define num_cpus         (G.num_cpus          )
                           ^
procps/top.c:308:7: note: in expansion of macro ‘num_cpus’
  if (!num_cpus) {
       ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:202:27: note: in expansion of macro ‘G’
 #define cpu_jif          (G.cpu_jif           )
                           ^
procps/top.c:313:4: note: in expansion of macro ‘cpu_jif’
    cpu_jif = xrealloc_vector(cpu_jif, 1, num_cpus);
    ^
In file included from procps/top.c:107:0:
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
include/libbb.h:743:26: note: in definition of macro ‘xrealloc_vector’
  xrealloc_vector_helper((vector), (sizeof((vector)[0]) << 8) + (shift), (idx))
                          ^
procps/top.c:202:27: note: in expansion of macro ‘G’
 #define cpu_jif          (G.cpu_jif           )
                           ^
procps/top.c:313:30: note: in expansion of macro ‘cpu_jif’
    cpu_jif = xrealloc_vector(cpu_jif, 1, num_cpus);
                              ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
include/libbb.h:743:44: note: in definition of macro ‘xrealloc_vector’
  xrealloc_vector_helper((vector), (sizeof((vector)[0]) << 8) + (shift), (idx))
                                            ^
procps/top.c:202:27: note: in expansion of macro ‘G’
 #define cpu_jif          (G.cpu_jif           )
                           ^
procps/top.c:313:30: note: in expansion of macro ‘cpu_jif’
    cpu_jif = xrealloc_vector(cpu_jif, 1, num_cpus);
                              ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
include/libbb.h:743:74: note: in definition of macro ‘xrealloc_vector’
  xrealloc_vector_helper((vector), (sizeof((vector)[0]) << 8) + (shift), (idx))
                                                                          ^
procps/top.c:204:27: note: in expansion of macro ‘G’
 #define num_cpus         (G.num_cpus          )
                           ^
procps/top.c:313:42: note: in expansion of macro ‘num_cpus’
    cpu_jif = xrealloc_vector(cpu_jif, 1, num_cpus);
                                          ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:202:27: note: in expansion of macro ‘G’
 #define cpu_jif          (G.cpu_jif           )
                           ^
procps/top.c:314:28: note: in expansion of macro ‘cpu_jif’
    if (read_cpu_jiffy(fp, &cpu_jif[num_cpus]) <= 4)
                            ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:204:27: note: in expansion of macro ‘G’
 #define num_cpus         (G.num_cpus          )
                           ^
procps/top.c:314:36: note: in expansion of macro ‘num_cpus’
    if (read_cpu_jiffy(fp, &cpu_jif[num_cpus]) <= 4)
                                    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:204:27: note: in expansion of macro ‘G’
 #define num_cpus         (G.num_cpus          )
                           ^
procps/top.c:316:4: note: in expansion of macro ‘num_cpus’
    num_cpus++;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:204:27: note: in expansion of macro ‘G’
 #define num_cpus         (G.num_cpus          )
                           ^
procps/top.c:318:7: note: in expansion of macro ‘num_cpus’
   if (num_cpus == 0) /* /proc/stat with only "cpu ..." line?! */
       ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:195:27: note: in expansion of macro ‘G’
 #define smp_cpu_info     (G.smp_cpu_info      )
                           ^
procps/top.c:319:4: note: in expansion of macro ‘smp_cpu_info’
    smp_cpu_info = 0;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:203:27: note: in expansion of macro ‘G’
 #define cpu_prev_jif     (G.cpu_prev_jif      )
                           ^
procps/top.c:321:3: note: in expansion of macro ‘cpu_prev_jif’
   cpu_prev_jif = xzalloc(sizeof(cpu_prev_jif[0]) * num_cpus);
   ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:203:27: note: in expansion of macro ‘G’
 #define cpu_prev_jif     (G.cpu_prev_jif      )
                           ^
procps/top.c:321:33: note: in expansion of macro ‘cpu_prev_jif’
   cpu_prev_jif = xzalloc(sizeof(cpu_prev_jif[0]) * num_cpus);
                                 ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:204:27: note: in expansion of macro ‘G’
 #define num_cpus         (G.num_cpus          )
                           ^
procps/top.c:321:52: note: in expansion of macro ‘num_cpus’
   cpu_prev_jif = xzalloc(sizeof(cpu_prev_jif[0]) * num_cpus);
                                                    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:203:27: note: in expansion of macro ‘G’
 #define cpu_prev_jif     (G.cpu_prev_jif      )
                           ^
procps/top.c:330:9: note: in expansion of macro ‘cpu_prev_jif’
   tmp = cpu_prev_jif;
         ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:203:27: note: in expansion of macro ‘G’
 #define cpu_prev_jif     (G.cpu_prev_jif      )
                           ^
procps/top.c:331:3: note: in expansion of macro ‘cpu_prev_jif’
   cpu_prev_jif = cpu_jif;
   ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:202:27: note: in expansion of macro ‘G’
 #define cpu_jif          (G.cpu_jif           )
                           ^
procps/top.c:331:18: note: in expansion of macro ‘cpu_jif’
   cpu_prev_jif = cpu_jif;
                  ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:202:27: note: in expansion of macro ‘G’
 #define cpu_jif          (G.cpu_jif           )
                           ^
procps/top.c:332:3: note: in expansion of macro ‘cpu_jif’
   cpu_jif = tmp;
   ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:204:27: note: in expansion of macro ‘G’
 #define num_cpus         (G.num_cpus          )
                           ^
procps/top.c:335:19: note: in expansion of macro ‘num_cpus’
   for (i = 0; i < num_cpus; i++)
                   ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:202:27: note: in expansion of macro ‘G’
 #define cpu_jif          (G.cpu_jif           )
                           ^
procps/top.c:336:24: note: in expansion of macro ‘cpu_jif’
    read_cpu_jiffy(fp, &cpu_jif[i]);
                        ^
procps/top.c: In function ‘do_stats’:
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:205:27: note: in expansion of macro ‘G’
 #define total_pcpu       (G.total_pcpu        )
                           ^
procps/top.c:350:2: note: in expansion of macro ‘total_pcpu’
  total_pcpu = 0;
  ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:192:27: note: in expansion of macro ‘G’
 #define ntop             (G.ntop              )
                           ^
procps/top.c:352:43: note: in expansion of macro ‘ntop’
  new_hist = xmalloc(sizeof(new_hist[0]) * ntop);
                                           ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:192:27: note: in expansion of macro ‘G’
 #define ntop             (G.ntop              )
                           ^
procps/top.c:358:18: note: in expansion of macro ‘ntop’
  for (n = 0; n < ntop; n++) {
                  ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:359:9: note: in expansion of macro ‘top’
   cur = top + n;
         ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:199:27: note: in expansion of macro ‘G’
 #define prev_hist_count  (G.prev_hist_count   )
                           ^
procps/top.c:374:7: note: in expansion of macro ‘prev_hist_count’
   if (prev_hist_count) do {
       ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:198:27: note: in expansion of macro ‘G’
 #define prev_hist        (G.prev_hist         )
                           ^
procps/top.c:375:8: note: in expansion of macro ‘prev_hist’
    if (prev_hist[i].pid == pid) {
        ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:198:27: note: in expansion of macro ‘G’
 #define prev_hist        (G.prev_hist         )
                           ^
procps/top.c:376:30: note: in expansion of macro ‘prev_hist’
     cur->pcpu = cur->ticks - prev_hist[i].ticks;
                              ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:205:27: note: in expansion of macro ‘G’
 #define total_pcpu       (G.total_pcpu        )
                           ^
procps/top.c:377:5: note: in expansion of macro ‘total_pcpu’
     total_pcpu += cur->pcpu;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:199:27: note: in expansion of macro ‘G’
 #define prev_hist_count  (G.prev_hist_count   )
                           ^
procps/top.c:380:16: note: in expansion of macro ‘prev_hist_count’
    i = (i+1) % prev_hist_count;
                ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:198:27: note: in expansion of macro ‘G’
 #define prev_hist        (G.prev_hist         )
                           ^
procps/top.c:389:7: note: in expansion of macro ‘prev_hist’
  free(prev_hist);
       ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:198:27: note: in expansion of macro ‘G’
 #define prev_hist        (G.prev_hist         )
                           ^
procps/top.c:390:2: note: in expansion of macro ‘prev_hist’
  prev_hist = new_hist;
  ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:199:27: note: in expansion of macro ‘G’
 #define prev_hist_count  (G.prev_hist_count   )
                           ^
procps/top.c:391:2: note: in expansion of macro ‘prev_hist_count’
  prev_hist_count = ntop;
  ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:192:27: note: in expansion of macro ‘G’
 #define ntop             (G.ntop              )
                           ^
procps/top.c:391:20: note: in expansion of macro ‘ntop’
  prev_hist_count = ntop;
                    ^
procps/top.c: In function ‘display_cpus’:
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:195:27: note: in expansion of macro ‘G’
 #define smp_cpu_info     (G.smp_cpu_info      )
                           ^
procps/top.c:457:16: note: in expansion of macro ‘smp_cpu_info’
  n_cpu_lines = smp_cpu_info ? num_cpus : 1;
                ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:204:27: note: in expansion of macro ‘G’
 #define num_cpus         (G.num_cpus          )
                           ^
procps/top.c:457:31: note: in expansion of macro ‘num_cpus’
  n_cpu_lines = smp_cpu_info ? num_cpus : 1;
                               ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:202:27: note: in expansion of macro ‘G’
 #define cpu_jif          (G.cpu_jif           )
                           ^
procps/top.c:462:12: note: in expansion of macro ‘cpu_jif’
   p_jif = &cpu_jif[i];
            ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:203:27: note: in expansion of macro ‘G’
 #define cpu_prev_jif     (G.cpu_prev_jif      )
                           ^
procps/top.c:463:17: note: in expansion of macro ‘cpu_prev_jif’
   p_prev_jif = &cpu_prev_jif[i];
                 ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:195:27: note: in expansion of macro ‘G’
 #define smp_cpu_info     (G.smp_cpu_info      )
                           ^
procps/top.c:481:6: note: in expansion of macro ‘smp_cpu_info’
     (smp_cpu_info ? utoa(i) : ""),
      ^
procps/top.c: In function ‘display_process_list’:
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:200:27: note: in expansion of macro ‘G’
 #define cur_jif          (G.cur_jif           )
                           ^
procps/top.c:640:14: note: in expansion of macro ‘cur_jif’
  busy_jifs = cur_jif.busy - prev_jif.busy;
              ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:201:27: note: in expansion of macro ‘G’
 #define prev_jif         (G.prev_jif          )
                           ^
procps/top.c:640:29: note: in expansion of macro ‘prev_jif’
  busy_jifs = cur_jif.busy - prev_jif.busy;
                             ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:205:27: note: in expansion of macro ‘G’
 #define total_pcpu       (G.total_pcpu        )
                           ^
procps/top.c:643:6: note: in expansion of macro ‘total_pcpu’
  if (total_pcpu < busy_jifs) total_pcpu = busy_jifs;
      ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:205:27: note: in expansion of macro ‘G’
 #define total_pcpu       (G.total_pcpu        )
                           ^
procps/top.c:643:30: note: in expansion of macro ‘total_pcpu’
  if (total_pcpu < busy_jifs) total_pcpu = busy_jifs;
                              ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:200:27: note: in expansion of macro ‘G’
 #define cur_jif          (G.cur_jif           )
                           ^
procps/top.c:661:28: note: in expansion of macro ‘cur_jif’
  tmp_unsigned = (uint16_t)(cur_jif.total - prev_jif.total) * total_pcpu;
                            ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:201:27: note: in expansion of macro ‘G’
 #define prev_jif         (G.prev_jif          )
                           ^
procps/top.c:661:44: note: in expansion of macro ‘prev_jif’
  tmp_unsigned = (uint16_t)(cur_jif.total - prev_jif.total) * total_pcpu;
                                            ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:205:27: note: in expansion of macro ‘G’
 #define total_pcpu       (G.total_pcpu        )
                           ^
procps/top.c:661:62: note: in expansion of macro ‘total_pcpu’
  tmp_unsigned = (uint16_t)(cur_jif.total - prev_jif.total) * total_pcpu;
                                                              ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:192:27: note: in expansion of macro ‘G’
 #define ntop             (G.ntop              )
                           ^
procps/top.c:675:18: note: in expansion of macro ‘ntop’
  if (lines_rem > ntop - G_scroll_ofs)
                  ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:160:22: note: in expansion of macro ‘G’
 #define G_scroll_ofs G.scroll_ofs
                      ^
procps/top.c:675:25: note: in expansion of macro ‘G_scroll_ofs’
  if (lines_rem > ntop - G_scroll_ofs)
                         ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:192:27: note: in expansion of macro ‘G’
 #define ntop             (G.ntop              )
                           ^
procps/top.c:676:15: note: in expansion of macro ‘ntop’
   lines_rem = ntop - G_scroll_ofs;
               ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:160:22: note: in expansion of macro ‘G’
 #define G_scroll_ofs G.scroll_ofs
                      ^
procps/top.c:676:22: note: in expansion of macro ‘G_scroll_ofs’
   lines_rem = ntop - G_scroll_ofs;
                      ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:677:6: note: in expansion of macro ‘top’
  s = top + G_scroll_ofs;
      ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:160:22: note: in expansion of macro ‘G’
 #define G_scroll_ofs G.scroll_ofs
                      ^
procps/top.c:677:12: note: in expansion of macro ‘G_scroll_ofs’
  s = top + G_scroll_ofs;
            ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:690:18: note: in expansion of macro ‘line_buf’
   col = snprintf(line_buf, scr_width,
                  ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:702:17: note: in expansion of macro ‘line_buf’
    read_cmdline(line_buf + col, scr_width - col, s->pid, s->comm);
                 ^
In file included from procps/top.c:107:0:
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
include/libbb.h:196:42: note: in definition of macro ‘fputs’
 # define fputs(s, stream) fputs_unlocked(s, stream)
                                          ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:703:9: note: in expansion of macro ‘line_buf’
   fputs(line_buf, stdout);
         ^
procps/top.c: In function ‘clearmems’:
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:720:7: note: in expansion of macro ‘top’
  free(top);
       ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:721:2: note: in expansion of macro ‘top’
  top = NULL;
  ^
procps/top.c: In function ‘reset_term’:
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:196:27: note: in expansion of macro ‘G’
 #define initial_settings (G.initial_settings  )
                           ^
procps/top.c:729:28: note: in expansion of macro ‘initial_settings’
   tcsetattr_stdin_TCSANOW(&initial_settings);
                            ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:198:27: note: in expansion of macro ‘G’
 #define prev_hist        (G.prev_hist         )
                           ^
procps/top.c:733:8: note: in expansion of macro ‘prev_hist’
   free(prev_hist);
        ^
procps/top.c: In function ‘topmem_sort’:
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:193:27: note: in expansion of macro ‘G’
 #define sort_field       (G.sort_field        )
                           ^
procps/top.c:776:40: note: in expansion of macro ‘sort_field’
  n = offsetof(topmem_status_t, vsz) + (sort_field * sizeof(mem_t));
                                        ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:194:27: note: in expansion of macro ‘G’
 #define inverted         (G.inverted          )
                           ^
procps/top.c:786:9: note: in expansion of macro ‘inverted’
  return inverted ? -n : n;
         ^
procps/top.c: In function ‘display_topmem_header’:
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:796:11: note: in expansion of macro ‘line_buf’
  snprintf(line_buf, LINE_BUF_SIZE,
           ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:802:70: note: in expansion of macro ‘line_buf’
  printf(OPT_BATCH_MODE ? "%.*s\n" : "\033[H\033[J%.*s\n", scr_width, line_buf);
                                                                      ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:804:11: note: in expansion of macro ‘line_buf’
  snprintf(line_buf, LINE_BUF_SIZE,
           ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:811:30: note: in expansion of macro ‘line_buf’
  printf("%.*s\n", scr_width, line_buf);
                              ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:813:11: note: in expansion of macro ‘line_buf’
  snprintf(line_buf, LINE_BUF_SIZE,
           ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:817:30: note: in expansion of macro ‘line_buf’
  printf("%.*s\n", scr_width, line_buf);
                              ^
procps/top.c: In function ‘display_topmem_process_list’:
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:767:35: note: in expansion of macro ‘top’
 #define topmem ((topmem_status_t*)top)
                                   ^
procps/top.c:832:29: note: in expansion of macro ‘topmem’
  const topmem_status_t *s = topmem + G_scroll_ofs;
                             ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:160:22: note: in expansion of macro ‘G’
 #define G_scroll_ofs G.scroll_ofs
                      ^
procps/top.c:832:38: note: in expansion of macro ‘G_scroll_ofs’
  const topmem_status_t *s = topmem + G_scroll_ofs;
                                      ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:835:9: note: in expansion of macro ‘line_buf’
  strcpy(line_buf, HDR_STR " COMMAND");
         ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:836:2: note: in expansion of macro ‘line_buf’
  line_buf[11 + sort_field * 6] = "^_"[inverted];
  ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:193:27: note: in expansion of macro ‘G’
 #define sort_field       (G.sort_field        )
                           ^
procps/top.c:836:16: note: in expansion of macro ‘sort_field’
  line_buf[11 + sort_field * 6] = "^_"[inverted];
                ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:194:27: note: in expansion of macro ‘G’
 #define inverted         (G.inverted          )
                           ^
procps/top.c:836:39: note: in expansion of macro ‘inverted’
  line_buf[11 + sort_field * 6] = "^_"[inverted];
                                       ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:837:64: note: in expansion of macro ‘line_buf’
  printf(OPT_BATCH_MODE ? "%.*s" : "\e[7m%.*s\e[0m", scr_width, line_buf);
                                                                ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:192:27: note: in expansion of macro ‘G’
 #define ntop             (G.ntop              )
                           ^
procps/top.c:840:18: note: in expansion of macro ‘ntop’
  if (lines_rem > ntop - G_scroll_ofs)
                  ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:160:22: note: in expansion of macro ‘G’
 #define G_scroll_ofs G.scroll_ofs
                      ^
procps/top.c:840:25: note: in expansion of macro ‘G_scroll_ofs’
  if (lines_rem > ntop - G_scroll_ofs)
                         ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:192:27: note: in expansion of macro ‘G’
 #define ntop             (G.ntop              )
                           ^
procps/top.c:841:15: note: in expansion of macro ‘ntop’
   lines_rem = ntop - G_scroll_ofs;
               ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:160:22: note: in expansion of macro ‘G’
 #define G_scroll_ofs G.scroll_ofs
                      ^
procps/top.c:841:22: note: in expansion of macro ‘G_scroll_ofs’
   lines_rem = ntop - G_scroll_ofs;
                      ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:844:35: note: in expansion of macro ‘line_buf’
   ulltoa6_and_space(s->pid     , &line_buf[0*6]);
                                   ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:845:35: note: in expansion of macro ‘line_buf’
   ulltoa6_and_space(s->vsz     , &line_buf[1*6]);
                                   ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:846:35: note: in expansion of macro ‘line_buf’
   ulltoa6_and_space(s->vszrw   , &line_buf[2*6]);
                                   ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:847:35: note: in expansion of macro ‘line_buf’
   ulltoa6_and_space(s->rss     , &line_buf[3*6]);
                                   ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:848:35: note: in expansion of macro ‘line_buf’
   ulltoa6_and_space(s->rss_sh  , &line_buf[4*6]);
                                   ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:849:35: note: in expansion of macro ‘line_buf’
   ulltoa6_and_space(s->dirty   , &line_buf[5*6]);
                                   ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:850:35: note: in expansion of macro ‘line_buf’
   ulltoa6_and_space(s->dirty_sh, &line_buf[6*6]);
                                   ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:851:35: note: in expansion of macro ‘line_buf’
   ulltoa6_and_space(s->stack   , &line_buf[7*6]);
                                   ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:852:3: note: in expansion of macro ‘line_buf’
   line_buf[8*6] = '\0';
   ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:854:18: note: in expansion of macro ‘line_buf’
    read_cmdline(&line_buf[8*6], scr_width - MIN_WIDTH, s->pid, s->comm);
                  ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:206:27: note: in expansion of macro ‘G’
 #define line_buf         (G.line_buf          )
                           ^
procps/top.c:856:33: note: in expansion of macro ‘line_buf’
   printf("\n""%.*s", scr_width, line_buf);
                                 ^
procps/top.c: In function ‘handle_input’:
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:904:30: note: in expansion of macro ‘G’
   c = read_key(STDIN_FILENO, G.kbd_input, interval * 1000);
                              ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:196:27: note: in expansion of macro ‘G’
 #define initial_settings (G.initial_settings  )
                           ^
procps/top.c:912:12: note: in expansion of macro ‘initial_settings’
   if (c == initial_settings.c_cc[VINTR])
            ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:196:27: note: in expansion of macro ‘G’
 #define initial_settings (G.initial_settings  )
                           ^
procps/top.c:914:12: note: in expansion of macro ‘initial_settings’
   if (c == initial_settings.c_cc[VEOF])
            ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:160:22: note: in expansion of macro ‘G’
 #define G_scroll_ofs G.scroll_ofs
                      ^
procps/top.c:918:4: note: in expansion of macro ‘G_scroll_ofs’
    G_scroll_ofs--;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:160:22: note: in expansion of macro ‘G’
 #define G_scroll_ofs G.scroll_ofs
                      ^
procps/top.c:922:4: note: in expansion of macro ‘G_scroll_ofs’
    G_scroll_ofs++;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:160:22: note: in expansion of macro ‘G’
 #define G_scroll_ofs G.scroll_ofs
                      ^
procps/top.c:926:4: note: in expansion of macro ‘G_scroll_ofs’
    G_scroll_ofs = 0;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:160:22: note: in expansion of macro ‘G’
 #define G_scroll_ofs G.scroll_ofs
                      ^
procps/top.c:930:4: note: in expansion of macro ‘G_scroll_ofs’
    G_scroll_ofs = ntop - G.lines / 2;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:192:27: note: in expansion of macro ‘G’
 #define ntop             (G.ntop              )
                           ^
procps/top.c:930:19: note: in expansion of macro ‘ntop’
    G_scroll_ofs = ntop - G.lines / 2;
                   ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:930:26: note: in expansion of macro ‘G’
    G_scroll_ofs = ntop - G.lines / 2;
                          ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:160:22: note: in expansion of macro ‘G’
 #define G_scroll_ofs G.scroll_ofs
                      ^
procps/top.c:934:4: note: in expansion of macro ‘G_scroll_ofs’
    G_scroll_ofs -= G.lines / 2;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:934:20: note: in expansion of macro ‘G’
    G_scroll_ofs -= G.lines / 2;
                    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:160:22: note: in expansion of macro ‘G’
 #define G_scroll_ofs G.scroll_ofs
                      ^
procps/top.c:938:4: note: in expansion of macro ‘G_scroll_ofs’
    G_scroll_ofs += G.lines / 2;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:938:20: note: in expansion of macro ‘G’
    G_scroll_ofs += G.lines / 2;
                    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:160:22: note: in expansion of macro ‘G’
 #define G_scroll_ofs G.scroll_ofs
                      ^
procps/top.c:940:8: note: in expansion of macro ‘G_scroll_ofs’
    if (G_scroll_ofs >= ntop)
        ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:192:27: note: in expansion of macro ‘G’
 #define ntop             (G.ntop              )
                           ^
procps/top.c:940:24: note: in expansion of macro ‘ntop’
    if (G_scroll_ofs >= ntop)
                        ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:160:22: note: in expansion of macro ‘G’
 #define G_scroll_ofs G.scroll_ofs
                      ^
procps/top.c:941:5: note: in expansion of macro ‘G_scroll_ofs’
     G_scroll_ofs = ntop - 1;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:192:27: note: in expansion of macro ‘G’
 #define ntop             (G.ntop              )
                           ^
procps/top.c:941:20: note: in expansion of macro ‘ntop’
     G_scroll_ofs = ntop - 1;
                    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:160:22: note: in expansion of macro ‘G’
 #define G_scroll_ofs G.scroll_ofs
                      ^
procps/top.c:942:8: note: in expansion of macro ‘G_scroll_ofs’
    if (G_scroll_ofs < 0)
        ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:160:22: note: in expansion of macro ‘G’
 #define G_scroll_ofs G.scroll_ofs
                      ^
procps/top.c:943:5: note: in expansion of macro ‘G_scroll_ofs’
     G_scroll_ofs = 0;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:197:27: note: in expansion of macro ‘G’
 #define sort_function    (G.sort_function     )
                           ^
procps/top.c:953:4: note: in expansion of macro ‘sort_function’
    sort_function[0] = pid_sort;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:197:27: note: in expansion of macro ‘G’
 #define sort_function    (G.sort_function     )
                           ^
procps/top.c:958:4: note: in expansion of macro ‘sort_function’
    sort_function[0] = mem_sort;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:197:27: note: in expansion of macro ‘G’
 #define sort_function    (G.sort_function     )
                           ^
procps/top.c:960:4: note: in expansion of macro ‘sort_function’
    sort_function[1] = pcpu_sort;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:197:27: note: in expansion of macro ‘G’
 #define sort_function    (G.sort_function     )
                           ^
procps/top.c:961:4: note: in expansion of macro ‘sort_function’
    sort_function[2] = time_sort;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:197:27: note: in expansion of macro ‘G’
 #define sort_function    (G.sort_function     )
                           ^
procps/top.c:976:4: note: in expansion of macro ‘sort_function’
    sort_function[0] = pcpu_sort;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:197:27: note: in expansion of macro ‘G’
 #define sort_function    (G.sort_function     )
                           ^
procps/top.c:977:4: note: in expansion of macro ‘sort_function’
    sort_function[1] = mem_sort;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:197:27: note: in expansion of macro ‘G’
 #define sort_function    (G.sort_function     )
                           ^
procps/top.c:978:4: note: in expansion of macro ‘sort_function’
    sort_function[2] = time_sort;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:197:27: note: in expansion of macro ‘G’
 #define sort_function    (G.sort_function     )
                           ^
procps/top.c:983:4: note: in expansion of macro ‘sort_function’
    sort_function[0] = time_sort;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:197:27: note: in expansion of macro ‘G’
 #define sort_function    (G.sort_function     )
                           ^
procps/top.c:984:4: note: in expansion of macro ‘sort_function’
    sort_function[1] = mem_sort;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:197:27: note: in expansion of macro ‘G’
 #define sort_function    (G.sort_function     )
                           ^
procps/top.c:985:4: note: in expansion of macro ‘sort_function’
    sort_function[2] = pcpu_sort;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:198:27: note: in expansion of macro ‘G’
 #define prev_hist        (G.prev_hist         )
                           ^
procps/top.c:991:9: note: in expansion of macro ‘prev_hist’
    free(prev_hist);
         ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:198:27: note: in expansion of macro ‘G’
 #define prev_hist        (G.prev_hist         )
                           ^
procps/top.c:992:4: note: in expansion of macro ‘prev_hist’
    prev_hist = NULL;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:199:27: note: in expansion of macro ‘G’
 #define prev_hist_count  (G.prev_hist_count   )
                           ^
procps/top.c:993:4: note: in expansion of macro ‘prev_hist_count’
    prev_hist_count = 0;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:193:27: note: in expansion of macro ‘G’
 #define sort_field       (G.sort_field        )
                           ^
procps/top.c:994:4: note: in expansion of macro ‘sort_field’
    sort_field = (sort_field + 1) % NUM_SORT_FIELD;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:193:27: note: in expansion of macro ‘G’
 #define sort_field       (G.sort_field        )
                           ^
procps/top.c:994:18: note: in expansion of macro ‘sort_field’
    sort_field = (sort_field + 1) % NUM_SORT_FIELD;
                  ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:194:27: note: in expansion of macro ‘G’
 #define inverted         (G.inverted          )
                           ^
procps/top.c:999:4: note: in expansion of macro ‘inverted’
    inverted ^= 1;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:195:27: note: in expansion of macro ‘G’
 #define smp_cpu_info     (G.smp_cpu_info      )
                           ^
procps/top.c:1006:8: note: in expansion of macro ‘smp_cpu_info’
    if (smp_cpu_info) {
        ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:203:27: note: in expansion of macro ‘G’
 #define cpu_prev_jif     (G.cpu_prev_jif      )
                           ^
procps/top.c:1007:10: note: in expansion of macro ‘cpu_prev_jif’
     free(cpu_prev_jif);
          ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:202:27: note: in expansion of macro ‘G’
 #define cpu_jif          (G.cpu_jif           )
                           ^
procps/top.c:1008:10: note: in expansion of macro ‘cpu_jif’
     free(cpu_jif);
          ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:202:27: note: in expansion of macro ‘G’
 #define cpu_jif          (G.cpu_jif           )
                           ^
procps/top.c:1009:5: note: in expansion of macro ‘cpu_jif’
     cpu_jif = &cur_jif;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:200:27: note: in expansion of macro ‘G’
 #define cur_jif          (G.cur_jif           )
                           ^
procps/top.c:1009:16: note: in expansion of macro ‘cur_jif’
     cpu_jif = &cur_jif;
                ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:203:27: note: in expansion of macro ‘G’
 #define cpu_prev_jif     (G.cpu_prev_jif      )
                           ^
procps/top.c:1010:5: note: in expansion of macro ‘cpu_prev_jif’
     cpu_prev_jif = &prev_jif;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:201:27: note: in expansion of macro ‘G’
 #define prev_jif         (G.prev_jif          )
                           ^
procps/top.c:1010:21: note: in expansion of macro ‘prev_jif’
     cpu_prev_jif = &prev_jif;
                     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:202:27: note: in expansion of macro ‘G’
 #define cpu_jif          (G.cpu_jif           )
                           ^
procps/top.c:1013:5: note: in expansion of macro ‘cpu_jif’
     cpu_jif = cpu_prev_jif = NULL;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:203:27: note: in expansion of macro ‘G’
 #define cpu_prev_jif     (G.cpu_prev_jif      )
                           ^
procps/top.c:1013:15: note: in expansion of macro ‘cpu_prev_jif’
     cpu_jif = cpu_prev_jif = NULL;
               ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:204:27: note: in expansion of macro ‘G’
 #define num_cpus         (G.num_cpus          )
                           ^
procps/top.c:1015:4: note: in expansion of macro ‘num_cpus’
    num_cpus = 0;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:195:27: note: in expansion of macro ‘G’
 #define smp_cpu_info     (G.smp_cpu_info      )
                           ^
procps/top.c:1016:4: note: in expansion of macro ‘smp_cpu_info’
    smp_cpu_info = !smp_cpu_info;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:195:27: note: in expansion of macro ‘G’
 #define smp_cpu_info     (G.smp_cpu_info      )
                           ^
procps/top.c:1016:20: note: in expansion of macro ‘smp_cpu_info’
    smp_cpu_info = !smp_cpu_info;
                    ^
procps/top.c: In function ‘top_main’:
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:202:27: note: in expansion of macro ‘G’
 #define cpu_jif          (G.cpu_jif           )
                           ^
procps/top.c:1097:2: note: in expansion of macro ‘cpu_jif’
  cpu_jif = &cur_jif;
  ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:200:27: note: in expansion of macro ‘G’
 #define cur_jif          (G.cur_jif           )
                           ^
procps/top.c:1097:13: note: in expansion of macro ‘cur_jif’
  cpu_jif = &cur_jif;
             ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:203:27: note: in expansion of macro ‘G’
 #define cpu_prev_jif     (G.cpu_prev_jif      )
                           ^
procps/top.c:1098:2: note: in expansion of macro ‘cpu_prev_jif’
  cpu_prev_jif = &prev_jif;
  ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:201:27: note: in expansion of macro ‘G’
 #define prev_jif         (G.prev_jif          )
                           ^
procps/top.c:1098:18: note: in expansion of macro ‘prev_jif’
  cpu_prev_jif = &prev_jif;
                  ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:197:27: note: in expansion of macro ‘G’
 #define sort_function    (G.sort_function     )
                           ^
procps/top.c:1126:2: note: in expansion of macro ‘sort_function’
  sort_function[0] = pcpu_sort;
  ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:197:27: note: in expansion of macro ‘G’
 #define sort_function    (G.sort_function     )
                           ^
procps/top.c:1127:2: note: in expansion of macro ‘sort_function’
  sort_function[1] = mem_sort;
  ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:197:27: note: in expansion of macro ‘G’
 #define sort_function    (G.sort_function     )
                           ^
procps/top.c:1128:2: note: in expansion of macro ‘sort_function’
  sort_function[2] = time_sort;
  ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:196:27: note: in expansion of macro ‘G’
 #define initial_settings (G.initial_settings  )
                           ^
procps/top.c:1138:26: note: in expansion of macro ‘initial_settings’
   tcgetattr(0, (void *) &initial_settings);
                          ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:196:27: note: in expansion of macro ‘G’
 #define initial_settings (G.initial_settings  )
                           ^
procps/top.c:1139:26: note: in expansion of macro ‘initial_settings’
   memcpy(&new_settings, &initial_settings, sizeof(new_settings));
                          ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:1155:4: note: in expansion of macro ‘G’
    G.lines = INT_MAX;
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:1158:4: note: in expansion of macro ‘G’
    G.lines = 24; /* default */
    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:1162:52: note: in expansion of macro ‘G’
    get_terminal_width_height(STDOUT_FILENO, &col, &G.lines);
                                                    ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:1163:8: note: in expansion of macro ‘G’
    if (G.lines < 5 || col < 10) {
        ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:192:27: note: in expansion of macro ‘G’
 #define ntop             (G.ntop              )
                           ^
procps/top.c:1173:3: note: in expansion of macro ‘ntop’
   ntop = 0;
   ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:192:27: note: in expansion of macro ‘G’
 #define ntop             (G.ntop              )
                           ^
procps/top.c:1180:9: note: in expansion of macro ‘ntop’
     n = ntop;
         ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:1181:5: note: in expansion of macro ‘top’
     top = xrealloc_vector(top, 6, ntop++);
     ^
In file included from procps/top.c:107:0:
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
include/libbb.h:743:26: note: in definition of macro ‘xrealloc_vector’
  xrealloc_vector_helper((vector), (sizeof((vector)[0]) << 8) + (shift), (idx))
                          ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:1181:27: note: in expansion of macro ‘top’
     top = xrealloc_vector(top, 6, ntop++);
                           ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
include/libbb.h:743:44: note: in definition of macro ‘xrealloc_vector’
  xrealloc_vector_helper((vector), (sizeof((vector)[0]) << 8) + (shift), (idx))
                                            ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:1181:27: note: in expansion of macro ‘top’
     top = xrealloc_vector(top, 6, ntop++);
                           ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
include/libbb.h:743:74: note: in definition of macro ‘xrealloc_vector’
  xrealloc_vector_helper((vector), (sizeof((vector)[0]) << 8) + (shift), (idx))
                                                                          ^
procps/top.c:192:27: note: in expansion of macro ‘G’
 #define ntop             (G.ntop              )
                           ^
procps/top.c:1181:35: note: in expansion of macro ‘ntop’
     top = xrealloc_vector(top, 6, ntop++);
                                   ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:1182:5: note: in expansion of macro ‘top’
     top[n].pid = p->pid;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:1183:5: note: in expansion of macro ‘top’
     top[n].ppid = p->ppid;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:1184:5: note: in expansion of macro ‘top’
     top[n].vsz = p->vsz;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:1186:5: note: in expansion of macro ‘top’
     top[n].ticks = p->stime + p->utime;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:1188:5: note: in expansion of macro ‘top’
     top[n].uid = p->uid;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:1189:12: note: in expansion of macro ‘top’
     strcpy(top[n].state, p->state);
            ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:1190:12: note: in expansion of macro ‘top’
     strcpy(top[n].comm, p->comm);
            ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:1192:5: note: in expansion of macro ‘top’
     top[n].last_seen_on_cpu = p->last_seen_on_cpu;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:192:27: note: in expansion of macro ‘G’
 #define ntop             (G.ntop              )
                           ^
procps/top.c:1199:9: note: in expansion of macro ‘ntop’
     n = ntop;
         ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:1201:5: note: in expansion of macro ‘top’
     top = xrealloc_vector(topmem, 6, ntop++);
     ^
In file included from procps/top.c:107:0:
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
include/libbb.h:743:26: note: in definition of macro ‘xrealloc_vector’
  xrealloc_vector_helper((vector), (sizeof((vector)[0]) << 8) + (shift), (idx))
                          ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:767:35: note: in expansion of macro ‘top’
 #define topmem ((topmem_status_t*)top)
                                   ^
procps/top.c:1201:27: note: in expansion of macro ‘topmem’
     top = xrealloc_vector(topmem, 6, ntop++);
                           ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
include/libbb.h:743:44: note: in definition of macro ‘xrealloc_vector’
  xrealloc_vector_helper((vector), (sizeof((vector)[0]) << 8) + (shift), (idx))
                                            ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:767:35: note: in expansion of macro ‘top’
 #define topmem ((topmem_status_t*)top)
                                   ^
procps/top.c:1201:27: note: in expansion of macro ‘topmem’
     top = xrealloc_vector(topmem, 6, ntop++);
                           ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
include/libbb.h:743:74: note: in definition of macro ‘xrealloc_vector’
  xrealloc_vector_helper((vector), (sizeof((vector)[0]) << 8) + (shift), (idx))
                                                                          ^
procps/top.c:192:27: note: in expansion of macro ‘G’
 #define ntop             (G.ntop              )
                           ^
procps/top.c:1201:38: note: in expansion of macro ‘ntop’
     top = xrealloc_vector(topmem, 6, ntop++);
                                      ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:767:35: note: in expansion of macro ‘top’
 #define topmem ((topmem_status_t*)top)
                                   ^
procps/top.c:1202:12: note: in expansion of macro ‘topmem’
     strcpy(topmem[n].comm, p->comm);
            ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:767:35: note: in expansion of macro ‘top’
 #define topmem ((topmem_status_t*)top)
                                   ^
procps/top.c:1203:5: note: in expansion of macro ‘topmem’
     topmem[n].pid      = p->pid;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:767:35: note: in expansion of macro ‘top’
 #define topmem ((topmem_status_t*)top)
                                   ^
procps/top.c:1204:5: note: in expansion of macro ‘topmem’
     topmem[n].vsz      = p->smaps.mapped_rw + p->smaps.mapped_ro;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:767:35: note: in expansion of macro ‘top’
 #define topmem ((topmem_status_t*)top)
                                   ^
procps/top.c:1205:5: note: in expansion of macro ‘topmem’
     topmem[n].vszrw    = p->smaps.mapped_rw;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:767:35: note: in expansion of macro ‘top’
 #define topmem ((topmem_status_t*)top)
                                   ^
procps/top.c:1206:5: note: in expansion of macro ‘topmem’
     topmem[n].rss_sh   = p->smaps.shared_clean + p->smaps.shared_dirty;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:767:35: note: in expansion of macro ‘top’
 #define topmem ((topmem_status_t*)top)
                                   ^
procps/top.c:1207:5: note: in expansion of macro ‘topmem’
     topmem[n].rss      = p->smaps.private_clean + p->smaps.private_dirty + topmem[n].rss_sh;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:767:35: note: in expansion of macro ‘top’
 #define topmem ((topmem_status_t*)top)
                                   ^
procps/top.c:1207:76: note: in expansion of macro ‘topmem’
     topmem[n].rss      = p->smaps.private_clean + p->smaps.private_dirty + topmem[n].rss_sh;
                                                                            ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:767:35: note: in expansion of macro ‘top’
 #define topmem ((topmem_status_t*)top)
                                   ^
procps/top.c:1208:5: note: in expansion of macro ‘topmem’
     topmem[n].dirty    = p->smaps.private_dirty + p->smaps.shared_dirty;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:767:35: note: in expansion of macro ‘top’
 #define topmem ((topmem_status_t*)top)
                                   ^
procps/top.c:1209:5: note: in expansion of macro ‘topmem’
     topmem[n].dirty_sh = p->smaps.shared_dirty;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:767:35: note: in expansion of macro ‘top’
 #define topmem ((topmem_status_t*)top)
                                   ^
procps/top.c:1210:5: note: in expansion of macro ‘topmem’
     topmem[n].stack    = p->smaps.stack;
     ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:192:27: note: in expansion of macro ‘G’
 #define ntop             (G.ntop              )
                           ^
procps/top.c:1214:7: note: in expansion of macro ‘ntop’
   if (ntop == 0) {
       ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:199:27: note: in expansion of macro ‘G’
 #define prev_hist_count  (G.prev_hist_count   )
                           ^
procps/top.c:1221:9: note: in expansion of macro ‘prev_hist_count’
    if (!prev_hist_count) {
         ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:1229:10: note: in expansion of macro ‘top’
    qsort(top, ntop, sizeof(top_status_t), (void*)mult_lvl_cmp);
          ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:192:27: note: in expansion of macro ‘G’
 #define ntop             (G.ntop              )
                           ^
procps/top.c:1229:15: note: in expansion of macro ‘ntop’
    qsort(top, ntop, sizeof(top_status_t), (void*)mult_lvl_cmp);
               ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:191:27: note: in expansion of macro ‘G’
 #define top              (G.top               )
                           ^
procps/top.c:767:35: note: in expansion of macro ‘top’
 #define topmem ((topmem_status_t*)top)
                                   ^
procps/top.c:1236:10: note: in expansion of macro ‘topmem’
    qsort(topmem, ntop, sizeof(topmem_status_t), (void*)topmem_sort);
          ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:192:27: note: in expansion of macro ‘G’
 #define ntop             (G.ntop              )
                           ^
procps/top.c:1236:18: note: in expansion of macro ‘ntop’
    qsort(topmem, ntop, sizeof(topmem_status_t), (void*)topmem_sort);
                  ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:1240:25: note: in expansion of macro ‘G’
    display_process_list(G.lines, col);
                         ^
procps/top.c:186:21: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
 #define G (*(struct globals*)&bb_common_bufsiz1)
                     ^
procps/top.c:1243:32: note: in expansion of macro ‘G’
    display_topmem_process_list(G.lines, col);
                                ^
shell/ash.c:2127:13: warning: ‘reinit_unicode_for_ash’ defined but not used [-Wunused-function]
 static void reinit_unicode_for_ash(void)
             ^
util-linux/umount.c: In function ‘umount_main’:
util-linux/umount.c:86:16: warning: typedef ‘bug’ locally defined but not used [-Wunused-local-typedefs]
   typedef char bug[
                ^
3178 blocks
qemu: terminating on signal 2
